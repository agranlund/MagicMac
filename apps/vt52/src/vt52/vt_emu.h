LONG	vt_Bconstat( WINDOW *window );
LONG	vt_Bconin( WINDOW	*window );
LONG	vt_Kbshift( WINDOW *window );
LONG	vt_Cconout(  WINDOW *window, BYTE *str, LONG cnt );
LONG	vt_Cconin( WINDOW *window );
WORD	search_ctrl( TSCREEN *tscreen );
WORD	search_ctrl_c( TSCREEN *tscreen );
WORD	search_ctrl_sq( TSCREEN *tscreen, ULONG del, ULONG search );
void	redraw_timer( void );
void	draw_cursor( WINDOW *window );
void	cursor( TPTR *line_ptr, ULONG attr, WORD x );
void	redraw_changed( WINDOW *window );
void  vt_jmp( WINDOW *window, UWORD c );
void  rawcon_jmp( WINDOW *window, UWORD c );
void  vt_con( WINDOW	*window, UWORD  c );
void  vt_bel( void );
void  vt_bs( WINDOW *window );
void  vt_ht( WINDOW *window );
void  vt_lf(  WINDOW *window );
void  vt_cr(  WINDOW *window );
void  vt_esc(  WINDOW *window, UWORD c );
void  vt_seq_A( TSCREEN *tscreen );
void  vt_seq_B( TSCREEN *tscreen ); 
void  vt_seq_C( TSCREEN *tscreen );
void  vt_seq_D( TSCREEN *tscreen );
void  vt_seq_E( TSCREEN *tscreen );
void  vt_seq_H( TSCREEN *tscreen );
void  vt_seq_I( WINDOW *window );
void  vt_seq_J( TSCREEN *tscreen );
void  vt_seq_K( TSCREEN *tscreen );
void  vt_seq_L( TSCREEN *tscreen );
void  vt_seq_M( TSCREEN *tscreen );
void  vt_seq_Y( TSCREEN *tscreen );
void	vt_seq_Y_y( WINDOW *window, UWORD y );
void	vt_seq_Y_x( WINDOW *window, UWORD x );
void  vt_seq_b( TSCREEN *tscreen );
void	vt_seq_b_color( WINDOW *window, UWORD color );
void  vt_seq_c( TSCREEN *tscreen );
void	vt_seq_c_color( WINDOW *window, UWORD color );
void  vt_seq_d( TSCREEN *tscreen );
void  vt_seq_e( TSCREEN *tscreen );
void  vt_seq_f( TSCREEN *tscreen );
void  vt_seq_j( TSCREEN *tscreen );
void  vt_seq_k( TSCREEN *tscreen );
void  vt_seq_l( TSCREEN *tscreen );
void  vt_seq_o( TSCREEN *tscreen );
void  vt_seq_p( TSCREEN *tscreen );
void  vt_seq_q( TSCREEN *tscreen );
void  vt_seq_v( TSCREEN *tscreen );
void  vt_seq_w( TSCREEN *tscreen );
void  scroll_up_page( WINDOW *window );
void  scroll_down_page( WINDOW *window );
void	redraw(	WINDOW *window, GRECT *area );
void	write_string(  WORD x, WORD y, WORD count, TSCREEN *tscreen, ULONG *line, GRECT *clip );
TSCREEN	*open_vt( WORD	columns, WORD rows, WORD buffer_rows, WORD font, WORD point );
void	close_vt( TSCREEN *tscreen );

void	vt_wrmode( WORD handle, WORD mode );
void	vt_tcolor( WORD handle, WORD color );
void	vt_fcolor( WORD handle, WORD color );
void	vt_finterior( WORD handle, WORD interior );
void	vt_cpyfm( WORD handle, VRECT *xy, MFDB *src, MFDB *des );
void	vt_rect( WORD handle, VRECT *xy );
void	vt_clip( WORD handle, VRECT *xy );

void	get_rect( WORD handle, WORD info, GRECT *box );
WORD	get_top( void );
WORD	get_owner( WORD handle );
WORD	update_window( WORD beg_update );
void	mouse_on( WORD *flag );
void	mouse_off( WORD *flag, GRECT *box );
void	switch_mouse( WORD mform );
void	vt_mesag( WORD *mbuf );

extern	void	vt_aes( AESPB *pb );
extern	void	vt_vdi( VDIPB *pb );
extern	void	vt_appl_yield( void );
extern	long	call_vt_bel( void );
extern	void	move_tbuf( ULONG *tbuf, WORD cnt );
extern	WORD	inc_sem( WORD *sem );