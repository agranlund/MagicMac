Liste der neuesten énderungen/Bemerkungen zu MagiC 6
====================================================



======================= VERSION 6.00alpha =======================

11.1.98
-------

- AES: Neuen Window-Manager eingebaut.
  Er verwaltet die Fensterstrukturen dynamisch und macht bei jedem
  wind_create() ein Malloc() und bei wind_delete() ein Mfree().
- AES: Fensterbehandlung generell beschleunigt. Das betrifft alle
  Operationen (îffnen/schlieûen/Redraws/verschieben/scrollen/...).
- AES: Bit 7 des FLG in MAGX.INF schaltet graue 3D-MenÅs und SubmenÅs ein.
- AES: Schnittstelle fÅr alternativen Fensterrahmen-Manager eingebaut.
- MAGX.INF: Eintrag #_SLB <ver> <name> eingebaut.
- AES: SLBs/ACCs/APPs erst ganz zum Schluû laden.
- AES: Neue fatale Fehlermeldung: "Fataler Fehler in Fensterverwaltung"
- WINFRAME: Alternative Fensterrahmen. Bitte nur ab 16 Farben einsetzen.
  Installation:
  - Abschnittkennung [shelbuf] vor #_CTR in MAGX.INF einfÅgen, damit der
    Abschnitt [aes] korrekt abgeschlossen ist.
  - Eintrag "#_SLB 0 WINFRAME.SLB" in MAGX.INF, natÅrlich in den
    Abschnitt [aes].
  - WINFRAME.SLB nach /gemsys/magic/xtension.
  - WINMAN.RSC aufs Wurzelverzeichnis des Bootlaufwerks (das werde ich
    natÅrlich noch Ñndern).

18.1.98
-------

- DOS: Sind auf einem (V)FAT-Medium lange Namen vorhanden, aber nicht
  aktiviert, werden bei Dgetpath() nur kurze Namen geliefert.
- AES: Beim Verschieben des obersten Fensters wird auch der obere Teil des
  Fensters korrekt neu gezeichnet.
  Damit ergeben sich mit den neuen Fensterrahmen und QED keine Redraw-Fehler
  mehr, wenn das oberste Fenster ein Pixel unter der MenÅleiste lag.
- AES: Wenn ein Scrollpfeil das 3D-Flag ACTIVATOR hat, wird ein evtl.
  vorhandenes erstes "child" bei der Selektion um ein Pixel nach rechts
  unten versetzt.
- AES: Slidergrîûe -1 wird wieder korrekt behandelt.
- AES: Fehler bei der Einbindung eines alternativen Fensterrahmen-Managers
  beseitigt.
- AES/WINFRAME: Der alternative Fensterrahmen-Manager legt die Hîhe des
  ge-shade-ten Fensters fest.
- AES/WINFRAME: Das Flag "kein expliziter Bdrop-Button" aus MAGX.INF
  wird ausgewertet.
- WINFRAME: Name bei ikonifiziertem Fenster kleiner.
- WINFRAME: Name und Info werden auf leere Zeichenkette initialisiert.
- WINFRAME: diverse optische Feinheiten fÅr die Breite des Namensfelds.
- WINFRAME: Das Fenster kann am 3D-Rahmen verschoben werden, jedoch nur
  auûerhalb des Grîûenfelds.
- WINFRAME: Fenster ohne alle Elemente bekommen nur einen einfachen
  3D-Rahmen (benîtigt 2 Pixel).
- Die Abschnittkennung vor #_CTR in MAGX.INF muû natÅrlich lauten
  "#[shelbuf]", Wilfried hatte das '#' vergessen, ebenso bei "#[aes]",
  daher wurde die Datei nicht korrekt ausgewertet.
- AES: Sinnlos Zeit vergeudet, einen Fehler im Zusammenhang mit PRINTMON
  zu finden. Es gibt keinen im AES, es befolgt korrekt alle Aufrufe.
- CALAMUS-98: Der HÑnger lag natÅrlich an Calamus, aber ich habe einen
  Workaround eingebaut. Ursache: wind_set(WF_NAME/WF_INFO) fÅr ein Fenster,
  das weder NAME noch INFO hat. Jetzt liefert wind_set() bei diesem Unsinn
  explizit 0 zurÅck.
- AES: Neue fatale Fehlermeldung: "Zuwenig Speicher in Fensterverwaltung"
- AES: shel_find() komplett neu geschrieben. Da jetzt fÅr die Dateisuche
  Fxattr() statt bisher Fsfirst() verwendet wird, sind nun lange
  Dateinamen mîglich. Die neue Routine ist noch nicht vollstÑndig getestet,
  daher kann es sein, daû z.B. PATH noch nicht korrekt ausgewertet wird.

22.1.98
-------

- AES: Bei G_ICONs wird jetzt auch, wie bisher nur bei G_CICONs, der Text-
  hintergrund weggelassen, wenn als seine Breite 0 angegeben wurde.
- AES: Fehler im neuen shel_find() korrigiert. Sucht jetzt wieder im Pfad
  des Programms.
- AES: weiterer Redraw-Fehler beim Nach-unten-Schieben von Fenstern behoben.

24.1.98
-------

- Environment-Variable SLBPATH wird zum Suchen nach SharedLibraries
  ausgewertet. Ist diese Variable nicht gesetzt, wird wie bisher
  nur in "<bootdrv>:/gemsys/magic/xtension" gesucht.
- SharedLibraries bekommen statt der Kommandozeile in der Basepage eine
  Zeichenkette, die den kompletten Pfad der SLB-Datei enthÑlt, also z.B.
  "C:\GEMSYS\MAGIC\XTENSION\WINFRAME.SLB". Der Pfad wird _nicht_ im Åblichen
  Format Åbergeben (1. Byte = LÑnge), sondern als normale 'C'-Zeichenkette.
  MagiC 5.20 Åbergibt hier nur Nullen.
  SharedLibraries, die Konfigurationsdateien benîtigen, sollten aus der
  Basepage den Pfad extrahieren und den Dateinamen anhÑngen.
- WINFRAME: Sucht seine RSC-Datei im eigenen Pfad. Ihr kînnt Eurer
  Wurzelverzeichnis wieder aufrÑumen.
- WINFRAME: Installiert sich nicht bei weniger als 16 Farben.
- wind_close() korrigiert, gibt jetzt den Speicher fÅr die Rechteckliste
  des Fensters frei. Der "fatale Fehler in der Fensterverwaltung" sollte
  jetzt nicht mehr auftreten.
- Doku: Ich habe die Doku fÅr das Editobjekt endlich fertiggestellt,
  auûerdem die Doku Åber das DOS erweitert und eine spezielle Datei zu
  den Pipes geschrieben.
- Jetzt ist es raus: Das SubmenÅ bei Texel bleibt weiû, weil das Muster des
  Hintergrunds auf "gefÅllt" statt "leer" gesetzt ist. Daher bringt der
  Schalter 3D-Beckgraund halt nix.
- AES: Die erweiterte Form von shel_write() wurde um einen zusÑtzlichen
  Parameter erweitert. Das zusÑtzliche Langwort gibt in Bit 0 an, daû die
  Applikation keinen proportionalen AES-Zeichensatz vertrÑgt.
- APPLICAT: Bei "Anwendung anmelden" kann angegeben werden, daû eine
  Applikation keinen proportionalen AES-Zeichensatz vertrÑgt.
- MAGXDESK 4: Bei shel_write() wird ggf. zusÑtzlich die Information
  Åbergeben, daû die Applikation keinen proportionalen AES-Zeichensatz
  vertrÑgt.
- Achtung!!!!

   Wenn man angibt, daû eine Applikation keinen prop. AES-Zeichensatz
   versteht, wird bisher (zu Testzwecken) lediglich appl_getinfo()
   manipuliert, d.h. solche Programme bekommen immer die Daten des
   Systemfonts.
   Leider scheint das ausschlieûlich bei wenigen Programmen
   zu funktionieren:

   - THING, PHOTO_ST, KOBOLD, TREECHECK, CORRECT und SCIGRAPH zeigen fÅr
     alle eigenen Objekte wie gewÅnscht den Systemzeichensatz.
     (THING: alte Version, neue sollen mit prop. Zeichensatz laufen)
     Sie sind daher einigermaûen bedienbar (SCIGRAPH blieb vorher sogar
     komplett hÑngen).
   - INTRFACE hÑngt sich nicht mehr auf, verwendet fÅr seine eigenen
     Objekte den Systemfont, aber (!) in der Grîûe des eingestellten
     prop. Zeichensatzes.
     D.h. INTRFACE ermittelt die Zeichensatzhîhe nicht (!) Åber
     appl_getinfo() ??!!??
   - ADRESSE bleibt wie bisher plump hÑngen, also kein Effekt.
   - QED verwendet weiterhin den AES-Zeichensatz, also nicht den, den
     es Åber appl_getinfo() erhalten hÑtte.
   - GEMINI verhÑlt sich wie QED.

   Damit ist das ganze Konzept also ziemlich sinnlos. Die Frage ist, wie
   diese ominîsen Programme den AES-Zeichensatz ermitteln. Offenbar gibt
   es auûer TEXEL kein einziges Programm, das appl_getinfo() verwendet.
   => Scheibenkleister!!!

   Jetzt bleibt nur noch Åbrig, zu versuchen, Kontakt mit dem Schîpfer
   oder dem HÅter der ominîsen MyDials aufzunehmen, um herauszufinden,
   was sich wer dabei gedacht hat. Mir fÑllt jedenfalls nichts mehr ein.
   Irgendwer hat jedenfalls tÅchtig herumgeschweinert, und ich muû die
   Suppe jetzt auslîffeln.

26.1.98
-------

- Dummer Tippfehler in MAGXDESK 4: Beim Laden von Textdateien Åber
  Ctrl-Doppelklick wurden die in APPLICAT eingetragenen Informationen
  ignoriert.
  Jetzt zeigt QED bei korrekter Anmeldung den Systemzeichensatz in den
  Dialogen.
- MGEDIT: Legt seine INF-Datei ins HOME-Verzeichnis.
- MGNOTICE: Legt seine INF-Datei ins HOME-Verzeichnis. Die Notizen selbst
  liegen noch im GEMDESK-Verzeichnis, sind also Rechner-global. Das sollte
  ich nochmal konfigurierbar machen.
  Vielleicht wÑre es ganz witzig, wenn es lokale und globale Notizen gÑbe?
  z.B.: "Wilfried an Sven, bitte den MÅll rausbringen".
- MGSEARCH: Legt seine INF-Datei ins HOME-Verzeichnis.
- neues MGCOPY: Legt seine INF-Datei ins HOME-Verzeichnis.
- neues MGCOPY: Ist die BestÑtigung abgeschaltet, erscheint nicht kurz
  der Wahldialog, sondern sofort der Fortschrittdialog.
- EDITOBJC.SLB: ^A selektiert den gesamten Text.

20.2.98
-------

- AES: Allen Unkenrufen (Hallo, Oliver!) zum Trotz haben die Behnes 
  eine Mîglichkeit gefunden, die vermaledeiten MyDial-Programme zum Laufen
  zu bringen. Diesen fiesen Hack habe ich jetzt eingebaut, er arbeitet
  folgendermaûen: FÅr Unverbesserliche erstellt das AES nach dem ôffnen der
  VDI-Workstation eine zweite, Dummy-Workstation. Zeichensatz dieser Dummy-
  Workstation bleibt der Systemzeichensatz in Default-Grîûe.
  Die Dîsbaddels kriegen jetzt bei graf_handle() diese Dummy-Workstation
  prÑsentiert und damit ihr Fett weg.
  Klappe zu und Affe tot.
- MGCOPY: Fortschrittsbalken klappt auch bei Verschieben auf demselben
  Laufwerk.
- AES: wind_open() auûerhalb des Bildschirms erzeugt kein WM_MOVED mehr.
  Der Effekt kam durch das automatische "Einblenden" beim ôffnen eines
  Fensters, wenn das Fenster unterhalb des Bildschirms lag.
- AES: Scrollende MultiTOS-Dialoge Åberschreiben beim Scrollen nicht mehr
  die Pfeile.
- AES: Scrollende MultiTOS-Dialoge scrollen korrekt bei gedrÅckter Maustaste.
- DOS: Ist bei Slbopen() der usp ungÅltig (NULL), wird die open-Funktion
  und ggf. die init-Funktion der slb im Supervisor-Modus ausgefÅhrt.
- DOS: Fehler bei Slbopen() beseitigt. Der Prozeûdeskriptor des Aufrufers
  wurde nicht korrekt an slb_open() Åbergeben.
- DOS: Fehler bei Slbopen() beseitigt: Absturz, wenn der Aufrufer kein
  Environment hatte.
- MAGXDESK: Doppelklick auf rechter Maustaste geht wieder. Das ist beim
  Umstellen auf MT_AES schief gelaufen.
- MAGXDESK: Start eines Programms bei keinem geîffneten Fenster stellt
  nicht mehr falsches Default-Laufwerk ein.
- AES: wind_set(WF_KIND) wird unterstÅtzt. Es wird versucht, in einigen
  FÑllen sinnvolle Redraws auszufÅhren.
- MAGXDESK4: Textmodus hat jetzt horiz. Scrollpfeile und -balken.
  Iconmodus hat keinen horiz. Scrollbalken mehr.
- MAGXDESK 4: freier Speicher in Infozeile, rechtsbÅndig.
- MGEDIT,MGNOTICE,MGSEARCH,MGCOPY: Die INF-Datei wird korrekt ins
  HOME gelegt, auch wenn der Pfad in der MAGX.INF einen abschlieûenden
  '\' enthÑlt.
- VFAT: Bei UNICode-Zeichen, die keine ASCII-Ensprechung haben, konnte
  es vorkommen, daû die Umwandlung in einer Endlosschleife stecken blieb,
  z.B. bei 0x2308. Das sollte jetzt nicht mehr vorkommen.
- AES: Fehler im alten (internen) Fensterrahmen-Manager beseitigt. Trat
  auf, wenn die Linien im Titel ausgeschaltet waren.
- AES: Fehler beim Auflîsungswechsel beseitigt. Vor dem Schlieûen der
  physikalischen VDI-Workstation per v_clswk() durch das AES werden jetzt
  zunÑchst alle geladenen "shared libraries" geschlossen. Diese erhalten
  dabei die Gelegenheit, vorher ihre virtuellen Workstations per v_clsvwk()
  zu schlieûen.
  Das Problem trat bei WINFRAME.SLB (benîtigt eine virtuelle Workstation)
  und ohne NVDI auf (NVDI ist offenbar robuster).
- Bootvorgang: Neuer Eintrag in MAGX.INF:

	#[boot]
	log=<log-Dateipfad>
	tiles=<Kachel-IMG-Dateipfad>
	image=<IMG-Dateipfad>

  Dabei bedeuten:

	#[boot]		Der neue Abschnitt, der in Zukunft vielleicht noch
				mehr Informationen beinhalten soll.
	log			Eine Log-Datei, in die die BIOS-Ausgabe bis zum Start
				des AES umgelenkt wird. Man kann hier natÅrlich
				auch z.B. NUL: angeben.
	tiles		Kachelhintergrund wie bei MAGXDESK.
	image		Titelbild, das Åber die Kacheln gezeichnet wird.

  Es ist zu beachten, daû die Log-Datei aus GeschwindigkeitsgrÅnden nur
  einmal geîffnet und einmal am Ende geschlossen wird. Falls also irgendein
  amoklaufendes AUTO-Ordner-Programm das System abschieûen sollte, wird die
  Datei nicht korrekt geschlossen, und das Dateisystem ist beschÑdigt.
  Das Problem kann natÅrlich nicht auf einer HFS-Partition in MagicMac
  auftreten; weiterhin kann man auch das Null-Device angegeben und damit
  die Ausgabe vollstÑndig und risikolos unterdrÅcken.

  Momentan werden nur IMG-Dateien und auch nur solche mit Bittiefen von
  1, 2, 4 oder 8 Bit unterstÅtzt. Die Umwandlung wird durch die
  Bibliothek XP_RASTR.SLB und das Laden und Anzeigen durch LOAD_IMG.SLB
  durchgefÅhrt. Diese Bibliotheken kînnen natÅrlich in Zukunft fÅr andere
  Dateiformate und andere Bildtiefen erweitert werden. Ebenso ist damit eine
  spÑtere Umsetzung direkt in GDI-Aufrufe mîglich.
- AES: Bei allen TEDINFO-Objekten ist <te_font = 4> fÅr MagiC
  reserviert. Bisher sind nur 0..2 fÅr MuliTOS, 3 und 5 fÅr TOS reserviert.
- AES: Neuer Eintrag in MAGX.INF:

	#_INW lineh fontID monoFlag fontH

  dabei bedeuten:

	lineh	Zeilenhîhe fÅr die INFO-Zeile aller Fenster. Eine Hîhe von
			0 bedeutet: Standardhîhe
	fontID	Zeichensatz-ID fÅr die INFO-Zeile. Eine 0 bedeutet: derselbe
			Zeichensatz wie fÅr den groûen AES-Text
	monoFlag	1 (Ñquidistant) oder 0 (proportional)
	fontH	Zeichensatzhîhe fÅr vst_height

- DOS: Ich muûte leider das Format der SLBs Ñndern. Neue Doku und neue
  SLBs sind notwendig. Siehe SHARELIB.TXT
- Atari: Wird bei Maddalt() ein FRB angelegt (seit MagiC 5.04), so wird
  jetzt auch ein Cookie eingetragen. Das klappt aber nur, wenn der Cookie
  Jar genÅgend groû ist. Da diese Aktion i.a. im AUTO-Ordner als erstes
  passiert, sollte das OK sein.
  Diese Aktion betrifft nur solche Rechner, die nachtrÑglich mit nicht
  Atari-konformen RAM- und/oder Beschleunigerkarten ausgestattet wurden.
  Z.B. den Ar...brenner.
- MAGXDESK 4: Fehler beim Deikonifizieren nach ALLICONIFY behoben. Es wurde
  immer nur ein Fenster wieder hergestellt.
- MGCOPY: Falscher Fenstertitel bei "nicht BestÑtigen" korrigiert.
- MGCOPY: Das Fortschritt-Fenster lÑût sich verkleinern, dies wird auch
  in der INF-Datei vermerkt.
- MGCOPY: Bei abgeschalteten 3D-Effekten ist der Fortschrittsbalken
  Grau (Muster 4) auf Weiû, und der Rahmen ist ein statt zwei Pixel breit.
- Beim neuen MXVDI konnte ich auf dem Mac keinen (!) Unterschied feststellen.
  MagicMac startet nach wie vor mit weiûem Bildschirm. Vielleicht fÅhrt schon
  Thomas' Emulator das Lîschen aus.
- MAGXDESK 4: Bisher konnten Verzeichnisses mit einem Speicherbedarf von
  maximal 256kB eingelesen werden. Das Konzept wurde jetzt dynamisch
  ausgelegt, die Grenze erhîht sich auf 2MB.
  Dennoch sollten lange Verzeichnisse tunlichst vermieden werden, da
  MAGXDESK nicht sicherstellt, daû genÅgend Speicher fÅr das System frei
  bleibt.
- Dateiauswahl: Bisher konnten Verzeichnisses mit einem Speicherbedarf von
  maximal 128kB eingelesen werden. Das Konzept wurde jetzt dynamisch
  ausgelegt, die Grenze erhîht sich auf 2MB.
  Dennoch sollten lange Verzeichnisse tunlichst vermieden werden, da
  die Dateiauswahl nicht sicherstellt, daû genÅgend Speicher fÅr das System
  frei bleibt.
- SEHR SEHR WICHTIG: MagicMac soll "Hintergrund-DMA"-fÑhig sein. Dazu
  habe ich drei der XFS-Funktionen auf "asynchronen Zugriff" (MacOS-
  Jargon) umgestellt. Genau:

  -	zu dev_read() und dev_write() gibt es jeweils eine neue, asynchrone
	Variante dev_pread() und dev_pwrite(), die bei eingeschaltetem
	preemptivem Multitasking (d.h. ab Start des AES) verwendet wird.
	Der neue MagiC-Kern (*.ram) benîtigt also einen neuen Emulatorkern
	(MagicMac Debug), den ich in einer Testversion beilege.
	Ansonsten: ABSTURZ!!!
  -	xfs_sync() arbeitet jetzt etwas intelligenter und IMMER asynchron.

  Da ich mit der mir zur VerfÅgung stehenden Compiler-Version nur die
  Debug-Version und nur Version 2.0.4 von MagicMac erstellen kann, muû
  ich genau diese Version beilegen. Erst wenn das Konzept seine Brauchbarkeit
  bewiesen hat, kann ich Thomas Tempelmann den neuen XFS-Quelltext schicken,
  damit er ihn in die aktuelle Version einbauen kann. Ich habe die MacOS-
  Versionsabfrage entfernt, so daû dieses MagicMac auch unter OS 8 lÑuft.

  Bitte testet also die aktuelle Version, die ich leider nur auf meiner
  AWS und nur unter System 7.6 ausprobieren kann!

  StabilitÑt: Beim gleichzeitigen Compilieren unter PureC und Kopieren
  mit MGCOPY habe ich "unmîgliche" Fehler erzeugen kînnen, deren Ursprung
  ich absolut nicht ergrÅnden kann. Im schlimmsten Fall stÅrzt MagicMac ab,
  und Ihr mÅût den Mac neu booten. Da der Mac sein Dateisystem automatisch
  und meiner Erfahrung nach sicher repariert, sind echte Datenverluste meiner
  Erfahrung nach fast unmîglich, jedenfalls ist mir noch nichts derartiges
  untergekommen. Nach Wilfrieds Erfahrungen lÑuft mîglicherweise MacOS 8
  auch stabiler als 7.x. Vielleicht lÑuft auch einen Power-Mac stabiler als
  mein "altes" Teil. Interessant ist fÅr mich auch, wie der aynchrone Transfer
  auf einer IDE-Platte wirkt, die ja bekanntlich kein DMA verwendet.

  Bedeutung: Gerade beim Hintergrunddruck Åber das neue NVDI 5 ist es
  sehr angenehm, wenn der Rechner wÑhrend der dabei stattfindenden
  Dateioperationen nicht "hÑngt". Auch zeigen sich die Vorteile des
  asynchronen Transfers bei lÑngeren MGCOPY-Aktionen; aufgrund des
  Åberlegenen (im Vergleich zu Windows95  B-) ) Thread-Konzepts bleibt dabei
  die Dialogbox voll bedienbar.
  Bisher hatten TT-Besitzer und solche, die einen "stabilen" Falcon hatten,
  gegenÅber der Mac-Version einen groûen Vorsprung. Dort lÑuft zusammen mit
  dem HDDRIVER und CBHD der Hintergrund-Transfer bereits seit MagiC 3
  problemlos. In KÅrze soll der Druckvorgang in MagicMac ebenfalls asynchron
  stattfinden, was eine weitere Verbesserung bringt.
  A propos: Ein MagicMac mit asynchronem Transfer verdient eigentlich mal
  wieder einen etwas grîûeren Versionssprung, also z.B. 2.3.
- AES: wind_set(WF_BEVENT) erweitert. MT_AES.H definiert:

	#define BEVENT_WORK		0x0001	/* AES 4.0	*/
	#define BEVENT_INFO		0x0002	/* MagiC 6	*/

  Dabei bewirkt BEVENT_INFO, daû der Bereich der INFO-Zeile in Bezug auf
  Mausklick-öbermittlung wie der Arbeitsbereich des Fensters behandelt
  wird.
- MAGXDESK 4: Klick auf INFO-Zeile zeigt Alert mit freiem Speicher.
- MAGXDESK 4: Wenn eine neue MAGX.INF erzeugt wird, werden die Abschnitte

	#[boot]
	#[aes]
	#[shelbuf]

  erzeugt. Bisher wurde fÑlschlicherweise "[aes]" statt "#[aes]" erzeugt.
- MAGXDESK 4: In den Dialogen "Disk-Informationen" und "Ordner-Informationen"
  gab es einen öberlauf bei groûen Partitionen. Ich habe die LÑnge der
  Zeichenkette erweitert, so daû jetzt maximal 99GB mîglich sind.
- MGSEARCH: "Y2000 compliant".

25.2.98
-------

- MAGXDESK 4: Mit gedrÅckter Alt-Taste kann man Åber "Ausschalten" das
  AES neu starten. Ich habe das nur fÅr Programmentwicklung/Testzwecke
  eingebaut, da es fÅr diesen Fall auf dem Mac bisher keine Mîglichkeit
  gab (kennt keinen Auflîsungswechsel).
- MAGXDESK 4: Erster Versuch einer "Fensteroptimalgrîûenfunktion":
  Bisher wurde INSERT wie der Maximalgrîûenknopf behandelt, jetzt bewirkt
  er eine Optimalgrîûenfunktion. Das Konzept arbeitet in dieser ersten
  Implementation so, daû die Anzahl der sichtbaren Spalten nach Mîglichkeit
  beibehalten und das Fenster unter keinen UmstÑnden verschoben
  wird. Wenn nicht alle Dateien dargestellt werden kînnen, wird das Fenster
  in der Vertikalen maximiert.
  Ist das Fenster bereits "optimal", wird es in den vorherigen Zustand
  zurÅckversetzt.
- appl_getinfo(): Unterfunktion 10 gibt Bit 12 als erweiterten shel_write()-
  Modus an (wg. prop. ZeichensÑtze).
- appl_getinfo(): Unterfunktion 13 erweitert, siehe folgenden Punkt.
- Zu form_popup(): Hier gilt dasselbe wie bei menu_popup(). Bei Verwendung
  von TastaturkÅrzeln sowie von Trennlinien sollte der Objekttyp G_SHORTCUT
  statt G_STRING verwendet werden. Die Funktion objc_draw() hat sonst leider
  keine Mîglichkeit, festzustellen, woher sie kommt.
  Das Vorhandensein des Objekttyps ist Åber appl_getinfo(), Unterfunktion 13,
  viertes WORD, Bit 3 erkennbar.
- Neuer Eintrag im Abschnitt [boot] in MAGX.INF:

	cookies=<n>

  Wenn <n> grîûer als die voreingestellte Zahl der Cookies (z.Zt: 21) ist,
  wird ein neuer Cookie-Bereich der angegebenen Grîûe alloziert.

29.2.98
-------

- Kleine Pixeleien an der Ausrichtung des Fenstertitels.
- Kleine Pixeleien in der Fensterversion der Dateiauswahl => keine doppelten
  schwarzen Striche mehr links und rechts neben dem Auswahlbereich.
- Fensterverwaltung nochmals verbessert. FÅr jedes Fenster wird eine
  Minimalgrîûe mitgefÅhrt, die bei wind_create() und wind_set(WF_KIND)
  berechnet wird. Falls Interesse bestehen sollte, kann ich dieses GRECT
  auch Åber wind_set/get() zugÑnglich machen.
- Einbindung des alternativen Fensterrahmens geÑndert. Die Einbindung ist
  jetzt Åbersichtlicher und flexibler, auûerdem muû der Fensterahmen-Manager
  jetzt die Minimalgrîûe festlegen.
- SEHR SEHR WICHTIG: Ich habe die "Hintergrund-DMA"-FÑhigkeit von MagicMac
  jetzt stÑndig eingeschaltet. Dabei sind mir aber sporadisch Fehler
  untergekommen:

	MGCOPY meldet immer wieder ab und zu geheimnisvolle TOS-Fehler mit
	positivem (!) Fehlercode (91). Dieser Fehler kann prinzipiell in
	MGCOPY Åberhaupt nicht auftreten; das zeigt, daû irgendwo etwas
	ziemlich durcheinander geraten ist. Komischerweise konnte ich den
	Fehler jedoch nie reproduzieren.
	Das scheint mir aber jetzt gelungen zu sein, und zwar beim Kopieren
	einer groûen Datei (834034 Bytes) von einer Platte auf eine andere
	Platte. Der Fehler kam manchmal beim Lesen, manchmal beim Schreiben.
	Ich konnte den Fehler sofort vermeiden, indem ich WBDAEMON entfernte
	(per Ctrl-Alt-Asc und Entfernen).
	Das ganze scheint anzudeuten, daû mein MacOS 7.6 auf der AWS nicht
	vernÅnftig reentrant ist, vermutlich kommt der SCSI-Manager mit
	mehreren gleichzeitigen Anfragen durcheinander (MGCOPY und WBDAEMON
	sind fÅr das MacOS _eine_ Applikation).
	Teilt mir bitte mit, ob Ihr den Fehler auch so reproduzieren kînnt
	bzw. ob Ihr mit neueren MacOS-Versionen (8.0 oder 8.1) oder anderen
	Rechnern (PowerPC) vielleicht bessere Erfahrungen machen kînnt.
	Ich kann das leider mangels MacOS 8.x und PowerPC nicht testen, bin
	also auf Hilfe angewiesen.

	NatÅrlich: Ihr mÅût die unmittelbare Dateisicherung ausschalten.
	Bremst das System sowieso fÅrchterlich aus. Auûerdem schaltet die
	Rechenzeitabgabe ans MacOS auch aus. Bei eingeschalteter Rechenzeit-
	abgabe trat der Fehler bei mir noch hÑufiger auf, kann aber Zufall sein.

	Hallo Ben: Meine AWS reagiert bei Rechenzeitabgabe ans MacOS nicht
	deutlich trÑger als ohne. Muû wohl an Deinem Rechner liegen. Oder
	irgendein Mac-Programm fummelt herum.

	Nochwas: Ich benutze die ADB-Maussteuerung und den NVDI-eigenen
	Mausbeschleuniger. Auûerdem den Copy-Back-Cache des 040. Mit der
	Cache-Einstellung "Ein", d.h. ohne Copy-Back, gibt es aber dieselben
	Fehler.

7.3.98
------

- MGVIEW: Wertet zusÑtzlich die Tasten BildHoch (Mac), BildRunter (Mac),
  Ende (Mac) und Ende (MF-2) aus.
- Neue Informationen zum Problem des asynchronen Transfers auf dem Mac.
  Ich habe das Problem folgendermaûen eingekreist:

	1. Das Problem tritt mit und ohne irgendwelche Systemerweiterungen
	   auf.
	2. Das Problem tritt mit OS 7.6 und 8.1 auf.
	3. Das Problem tritt (zumindest unter OS 7.6, das ich lieber als
	   8.1 benutze) nur dann auf, wenn ich Dateien auf das Startvolume
	   kopiere.
- Die minimal zulÑssige Fenstergrîûe (fÅr CURRXYWH) kann jetzt per
  wind_get() abgefragt werden (MT_AES.H entsprechend erweitert):

	#define WF_MINXYWH 103 /* MagiC 6 */

  Achtung: Der Aufruf existiert nur in MagiC, es gibt sonst leider keine
  Mîglichkeit, die Existenz des Aufrufs zu ermitteln.
- MAGXDESK verwendet wind_get(WF_MINXYWH) fÅr die Optimalgrîûenfunktion.
- Bzgl. systemglobaler Farbauswahl: Ich schlage die AES-Funktionsnummern
  220 bis 229 vor, halte es aber fÅr sinnvoller, einfach eine Shared Lib
  zu schreiben. FÅr TOS, MiNT und konsorten mÅûte man dann noch eine
  Lîsung machen, die den Shared Lib Mechanismus nachbildet.
- Mac: Ich bin jetzt in der Lage, eine neuere Version von MagicMac zu
  compilieren. Zur Zeit habe ich die Quelltexte fÅr die Version 2.2.4.
  Damit es kein Durcheinander mit den von Tempi erstellten und damit
  offiziellen Versionen gibt und da ich auûerdem nur die "Debug"-Version
  erstellen kann (ich weiû leider nicht, worin sich bei Tempi die
  Release-Version von der Debug-Version unterscheidet, auûer zusÑtzlichen,
  Zeit kostenden Sicherheitsabfragen auf der Mac-Seite), nenne ich das
  Programm immer "MagicMac v.r.u AK Debug".
- Mac-XFS: Merkt sich jetzt immer die Zeit des letzten Zugriffs (lesen oder
  schreiben) sowie den Status "asynchroner Zugriff aktiv". Damit wird
  verhindert, daû der Wbdaemon (und damit PBFlushvol) wÑhrend eines laufenden
  Transfers aufgerufen wird.
  Der Mechanismus ist noch unvollkommen und funktioniert nur bei einem
  gleichzeitig laufenden Plattenzugriff, d.h. z.B. wÑhrend eines
  Kopiervorgangs Åber MGCOPY. FÅr weitere gleichzeitige Zugriffe muû ich
  den Mechanismus noch verfeinern, aber es geht mir jetzt erstmal um
  die Information, ob die Version so einigermaûen lÑuft oder nicht.
- MGCOPY: Eine Eigenschaft von MGCOPY definiere ich als "known bug", weil
  ich sie nicht beheben will. Kopiert man Daten im Modus "umbenennen", so
  wirkt diese Einstellung offenbar nur auf Dateien, nicht auf Ordner.

28.3.98
-------

- MAGXDESK 4 hat jetzt einen RÅckwÑrtspfeil. Der Schlieûknopf des
  Fensters schlieût sofort, der RÅckwÑrtspfeil reagiert auf Einzelklick.
- Der asynchrone Dateitransfer fÅr Mac-Laufwerke in MagicMac hat jetzt
  hoffentlich seine endgÅltige Form erhalten. FÅr die AbstÅrze, die auf
  meinem Mac auftraten, hat sich folgender Fehler im MacOS
  als verantwortlich herausgestellt, und zwar in PBFlushVol():

	Wird PBFlushVol() aufgerufen, wÑhrend irgendein asynchroner
	Lese- oder Schreibvorgang aktiv ist, werden irgendwelche
	Speicherbereiche Åberschrieben, bei MGCOPY z.B. der Bereich auf
	dem Stapel, der den letzten Fehlercode enthielt. Daher die
	"Fehlercode #113" oder "Fehlercode #89" Meldungen.

	Dieses Problem habe ich mit einer Semaphore fÅr jedes
	einzelne Mac-Volume umgangen. Dabei habe ich sichergestellt,
	daû, wenn C: und D: auf demselben (ja, demselben, nicht etwa
	nur dem gleichen!) Volume liegen, auch dieselbe (auch hier
	dieselbe, nicht nur die gleiche) Semaphore verwendet wird.

  Der Transfer verwendet in dieser MagiC-Version erstmals den Callback-
  Mechanismus des MacOS so, daû damit die auf den I/O-Transfer wartende
  MagiC-Task wieder aufgeweckt wird.
  Der Transfer wird also voll Åber den dafÅr vorgesehenen MagiC-Mechanismus
  evnt_IO() abgewickelt, da hier eine deutlich bessere Rechenzeit-
  Ausnutzung erreicht wird als mit den bisherigen appl_yield()-Schleifen.

1.4.98
------

- Maximalgrîûenknopf in Magxdesk ist Optimalgrîûe.
- Der Diskzugriff in Magxdesk beim Schlieûen von Fenstern sollte jetzt
  nicht mehr auftreten.
- MGCOPY: Nicht JA, sondern Ja. Nicht NEIN, sondern Nein.
- Die neue Version lÑuft bis Mitte Juli.
- minimale Grîûe des Shell-Puffers auf 8k statt 4k.
- Wichtig: Beim Booten wird unbedingt das neue img_slb benîtigt, das
  ich hier beifÅge. Es ist 15374 Bytes lang und vom 24.2.98. Diese Version
  stammt von den Behnes und kann mehrere Dateiformate lesen (?).
  Die alte XP_RASTR.SLB wird nicht mehr benîtigt.

2.4.98
------

- MAGXDESK: Farbicon fÅr den RÅckwÑrtspfeil eingebaut. Dazu muû die
  APPLICAT.INF in einen Editor geladen werden, und folgende Zeile muû
  im Abschnitt [<Spezial>] hinter der FLDR-Zeile eingefÅgt werden:

	PARD ZurÅck MAGICICN.RSC 132 "ZURUECK"

  NatÅrlich vorher die neue, beigefÅgte MAGICICN.RSC installieren. Sie
  enthÑlt nÑmlich das Icon 132. Man kann das Icon Ñndern, indem man auf
  den Papierkorb klickt und "Icon Ñndern..." aufruft. Dann sind nÑmlich
  alle Icons der Kategorie "Spezial" Ñnderbar.
- MAGXDESK: Freier Speicher wird nicht mehr in %, sondern in K,M oder G
  angezeigt. Wer sich Åber die niedrigen Zahlen (HD-Diskette hat 1,3M)
  wundert: Ich habe mit K=2^10, M=2^20, G=2^30 gerechnet.

6.4.98
------

- AES: Der weiûe Schatten bei 3D-Fenstertiteln lag ein Pixel zu tief und
  ein Pixel zu weit links.
- Alte Fensterrahmen: Die Einstellungen von WINCOLOUR wurden bei allen
  Fensterelementen nicht berÅcksichtigt, die vom Typ G_BOXCHAR sind.
- AES: Bei pdlg_create() wird ein Slbopen("PDLG.SLB",0) durchgefÅhrt.
  Bei Erfolg wird in den AES-Dispatcher zurÅckgesprungen, bei Miûerfolg
  wird eine 0 in intout[0] und eine NULL in addrout[0] geschrieben.
- MAGXDESK: GB statt G, MB statt M, KB statt K.

9.4.98
------

- Asche Åber mein Haupt! Der vermeintliche Code, der bei menu_attach()
  das SubmenÅ mit FL3D_BACKGR eingrauen sollte, war in meinem Quelltext
  nicht mehr drin, vielleicht auf meinem TT verloren gegangen. Kein Wunder,
  daû Texels SubemenÅs immer unschuldig weiû waren.
  Ist jetzt korrigiert und funktioniert.
- Der alternative Fensterrahmen funktionierte bisher nur bei einem
  Objektraster von 8*16.
  Das ist jetzt sowohl fÅr Rasterbreite wie -hîhe korrigiert. D.h. der
  Fensterrand verÑndert seine Ausmaûe nicht mehr mit dem Raster.
  Wenn ich, wie ich Olaf schon vor 10 Jahren gesagt habe (leier, leier, ...)
  in INTRFACE die Objektausmaûe vernÅnftig hÑtte einstellen kînnen, wÑre
  das alles kein Problem gewesen...
  Schimpf!!!
- Anmerkung: Das (V)FAT-Dateisystem weist (schon immer und auch zumindest
  in einigen TOS-Versionen) eine kleine InkompatibilitÑt zum MS-DOS Standard
  auf, und zwar wird nur die Cluster-Nummer -1 (0xffff) als Dateiende
  erkannt.
  Soweit ich mich erinnere, kînnen laut Standard die Nummern
  0xfff0..0xffff das Dateiende markieren. Der Gedanke dabei war wohl, daû
  eine Datei entweder zu Ende oder ganz zu Ende oder gar ganz am Ende bzw.
  endlich sein kînnte, auûerdem wollte man sich weitere Varianten
  fÅr NT 6.0 offenhalten.
- énderungen der WDIALOG-, LISTBOX- und FNTMENU-Bibliothek von Sven&Wilfried
  Åbernommen. fnts_close() und wdlg_close() geben x/y-Koordinaten zurÅck, und
  beim Selektieren eines Listbox-Elements wird ab Wurzelobjekt gezeichnet.
  Auûerdem stellt WDIALOG den Rand eines Dialogs nach Schlieûen wieder her.
- Bei Ñquidistantem AES-Zeichensatz sollten eigentlich die alten Regeln bei
  den Objektgrîûen gelten, d.h. die Hîhe einer RSC-Einheit sollte der Hîhe
  des groûen Zeichensatzes entsprechen. Bzw. in der Praxis: Hat der
  Eintrag #_TXB in der MAGX.INF eine "1" fÅr "Ñquidistant", so sollte
  keine (!) #_OBS Zeile angegeben sein, damit das AES die RSC-Einheiten
  entsprechend automatisch korrekt berechnet.
  Trotzdem habe ich fÅr Gîtz die Sonderbehandlung fÅr G_(BOX)TEXT Objekte
  mit DECKEND und LINKSBöNDIG, die ich bei prop. ZeichensÑtzen verwende,
  ebenfalls eingebaut. D.h., wenn ein Objekt eine RSC-Einheit hoch ist, aber
  der Zeichensatz zu klein ist (Hîhe < RSC-Einheit), so wird vor dem Zeichnen
  des Textes eine weiûe Box "untergelegt". Diese neue Abfrage resultiert in
  einer etwas verlangsamten Ausgabegeschwindigkeit fÅr Ñquidistante AES-
  ZeichensÑtze (auch fÅr den Systemfont), aber erspart vielleicht ein paar
  Telefonate an der Hotline.
- Default-Desktop-Hintergrund: Ich habe die Initialisierung folgendermaûen
  geÑndert:

	Das Muster wird zunÑchst auf 50% Schwarz gesetzt ($41).
	Das Muster wird ggf. aus der MAGX.INF ausgelesen und verÑndert.
	Ist der Bildschirm S/W und hat das Muster eine Farbe > 1, d.h.
	 ist das Muster nicht S/W, so wird es wieder auf 50% Schwarz gesetzt.

  Wer also einen Eintrag fÅr 100% Hellgrau in der MAGX.INF hat, erhÑlt, wenn
  der Rechner in S/W-Auflîsung startet, trotzdem ein Muster von 50% Schwarz.

  Wer sich im VierteWeltLaden eineN AtomstromfilterIn gekauft hat und eine
  Sonne auf seine katalysatorlose Ente geklebt hat und unheimlich auf einen
  grÅnen Hintergrund steht, muû selbigen explizit in der MAGX.INF einstellen.
- MAGXDESK: In der INFO-Zeile der Fenster werden die Grîûenangaben jetzt
  mit 1000er-Punkten angegeben.
- MAGXDESK: Ermittelt das Trennzeichen fÅr Datumsangaben sowie die Reihenfolge
  der Datumsangaben (TMJ/MTJ,...) aus dem _IDT Cookie.
  Das Trennzeichen fÅr die Uhrzeit kann man mit dem Cookie offenbar nicht
  angeben, ich habe es daher fest auf ':' gesetzt. Auûerdem ignoriere ich
  die Angabe fÅr 12h/24h Darstellung, da ich bei 12h durch das AM/PM immer
  eine andere ZeichenkettenlÑnge erhalte und Probleme mit der
  Spaltendarstellung bekomme.
- Achtung: Thomas Much weist darauf hin, daû der Aufruf wind_get() mit
  WF_MINXYWH nur in MagiC existiert, es gibt sonst leider keine Mîglichkeit,
  die Existenz des Aufrufs zu ermitteln.

  Ich denke, man muû die MagiC-Version abfragen. Leider gibt TOS offenbar
  in intout[0] keinen vernÅnftigen Fehlercode zurÅck.
- Fehler bei Dgetpath() auf Laufwerk U: behoben. Der Fehler hatte sich
  offenbar bei MagiC 5.10 eingeschlichen und bewirkt, daû der fÅhrende
  Backslash fehlte (siehe 31.5.97).
- EDITOB.SLB: edit_evnt() liefert jetzt einen Fehlercode (=> EDITOB.TXT)
- MT_AES: G_SHORTCUT ergÑnzt. Fehlercode bei edit_evnt() ergÑnzt, Makros
  fÅr fslx_...() ergÑnzt.
- WINFRAME: Ich habe den Sonderfall "inneres Rechteck hat Hîhe 0"
  berÅcksichtigt. Bisher hatte das Fenster dann immer ein "Loch".
  Das Ergebnis ist, bedingt durch den leeren inneren Rahmen, der wie ein
  schwarzer dicker Strich aussieht, nicht berauschend, aber zulÑssig, d.h.
  das Loch ist gestopft.
- AES: Die Funktion objc_sysvar() um die Unterfunktion

	MENUCOL	11

  erweitert. Modus "set" ist verboten, "get" liefert je nach Systemeinstellung
  zur Zeit 0 (WHITE) oder 8 (LWHITE, d.h. hellgrau).
- EDITOBJC.SLB: OneOffBug beseitigt, der zum TextpufferÅberlauf und zur
  Zerstîrung der Speicherverwaltung fÅhren konnte.
- EDITOBJC.SLB: OneOffBug beseitigt, der falsche Zeichenposition zur
  Pixelposition des Cursors berechnete.

27.4.98
-------

- DOS: Internen Speicher vergrîûert, um die Notwendigkeit fÅr ADDMEM
  hinauszuzîgern.
- Neuen Mechanismus fÅr Installationsprogramme eingebaut, die bei der
  Installation eines Programmes gleich eine Iconzuweisung usw. macht.
  Zur Beschreibung siehe MOD_APP.TXT.
- EDIOBJC.SLB: edit_set_font() und edit_get_font() erweitert. Das neue
  Flag "fontPix" gibt an, ob die Zeichensatzhîhe in Punkten (0) oder
  Pixeln (1) angegeben wurde.
- MT_AES: edit_set_font() und edit_get_font() erweitert, um Zeichengrîûen
  statt in Pt alternativ in Pixeln angeben zu kînnen.
- MT_AES: Makro fÅr edit_evnt() korrigiert.
- MAGXDESK: Benîtigt unbedingt das neue System vom 27.4.98
- Dateiauswahl: BerÅcksichtigt den IDT-Cookie fÅr die Darstellung des
  Datums. Er wird beim Start des AES abgefragt.

8.5.98
------

- MGCOPY: Bei falschen Kommandozeilen konnte das Programm abstÅrzen. Ich
  habe das Problem durch eine Sicherheitsabfrage entschÑrft.
  Symptom war: Wurden in MAGXDESK viele Objekte innerhalb eines Fensters
  selektiert und dann an MGCOPY Åbergeben (zum Kopieren, Lîschen usw.), so
  kam es bei MAGXDESK zum öberlauf eines allozierten Puffers und damit zum
  Abschneiden der an MGCOPY Åbergebenen Kommandozeile, die damit unvollstÑndig
  und ungÅltig war.
- MAGXDESK: Bisher wurde ein Block von 10 kB alloziert, um Kommandos an
  MGCOPY zu Åbergeben (per ARGV oder VA_START). Dieser Block ist jetzt
  variabel groû, d.h. er wird ggf. beliebig oft dynamisch in 10 kB-Schritten
  vergrîûert. Endlich kann ich mal Mshrink() bzw. Mgrow() richtig ausreizen.
  Wenn der Block dahinter belegt ist, kopiert MAGXDESK die Daten in einen
  anderen, neu allozierten Block um. Also gleiches Prinzip wie beim Einlesen
  von Verzeichnissen.
- EDITOBJC.SLB: edit_set_format() berechnet bei énderung des <autowrap>-
  Parameters die Anzahl der Zeilen neu. Doku EDITOB.TXT ergÑnzt und korrigiert.
- wind_set(WF_NAME oder WF_INFO): Verursacht kein Neuzeichnen des geÑnderten
  Objekts, wenn dieses nicht Teil des Objektbaums ist.
  wind_set(WF_KIND) fÅhrte vorher bei ikonifiziertem oder ge-shade-tem
  Fenster zu einer Endlosschleife im System.

14.5.98
-------

- AES: Shortcuts RETURN und TAB werden erkannt und ggf. rechtsbÅndig
  ausgegeben.
- EDITOBJC.SLB: Bîsen Fehler behoben, der beim zweiten Editobjekt zum
  Programmabsturz fÅhrte.
- WINFRAME.SLB: wind_get(WF_WORKXYWH) fÅhrte bei ge-shade-ten Fenstern zu
  einer falschen Berechnung. Beim internen Fensterrahmen-Manager gab es
  keine Probleme.

17.5.98
-------

- EDITOBJC.SLB: Weiteren Fehler behoben, der zu falschen Zeichensatz-
  Berechnungen fÅhrte, wenn mehr als ein Editobjekt im Spiel war.
- MGNOTICE 2.0: Neue Version unter Verwendung des Edit-Objekts.

21.5.98
-------

- TT-SCSI und Falcon-SCSI: UnterstÅtzung von Bus-Arbitrierung.
- MAGXDESK: Auf besonderen Wunsch von ASH ist die Anzeige des ".."
  Verzeichnis-Eintrags abschaltbar. DafÅr habe ich mir die Mîglichkeit
  geschonken, die fliegenden Dialoge abzuschalten.
  Konfigurierungsfetischisten werden eh' die Jinnee bevorzugen.
- INSTMAGC: Kopiert auf beiden Disketten zunÑchst das Unterverzeichnis
  MAGX_<n>/_COPY auf das MagiC-Laufwerk. Dadurch lassen sich die Dateien
  besser auf die zwei Disketten verteilen. Ob's jetzt paût?
- AES: Automatisches Nachladen von PDLG.SLB klappt jetzt. War nur ein
  Tippfehler, auûerdem muû appl_getinfo(7) natÅrlich Bit 4 setzen.

23.5.98
-------

- PDLG.SLB: Das Konzept hat die Schwachstelle, daû zwar die SharedLib
  automatisch bei pdlg_create() geladen, jedoch erst bei Terminieren des
  Prozesses wieder freigegeben wird.
  Da z.B. COPS pdlg_create() aufruft, sich aber nie beendet, hat es wenig Sinn,
  PDLG.SLB immer nachzuladen (es bleibt nach dem ersten Aufruf durch COPS
  sowieso im Speicher). COPS kînnte natÅrlich Slbopen() und Slbclose() explizit
  aufrufen, wie dies auch MGEDIT und MGNOTICE bei EDITOBJC machen, aber das
  wÑre eine weitere MagiC-Sonderbehandlung (unter TOS nicht notwendig, da
  WDIALOG.PRG immer da ist).
  Daher sollte man PDLG.SLB einfach in die MAGX.INF eintragen, wie ich dies
  auch in der Release-Version gemacht habe. GegenÅber WDIALOG.PRG ergeben
  sich dann immer noch leichte Speicherplatzvorteile, ein besseres
  Auflîsungswechsel-Handling (SLB wird dabei automatisch entfernt und dann
  neu geladen) sowie der fÅr mich grîûte Vorteil: PDLG.SLB hÑngt nicht in
  Trap #2.
- MAGICICN.RSC: 8-Bit-Icon fÅr NVDI entfernt.
- INSTMAGC: BÅgelt CHGRES.PRG und CHGRES.RSC nicht Åber.
- INSTMAGX: Åbernimmt die Zeilen
	#_ENV HOME=
  im Abschnitt
	#[aes]
  und
	drives=
  im Abschnitt
	#[vfat]
  aus einer ggf. vorhandenen, alten MAGX.INF.
  Eigentlich sollte jede #_ENV-Zeile Åbernommen werden, aber ich befÅrchte,
  daû ich mir dabei noch irgendeinen Fehler in INSTMAGC.PRG einfange.
- Wilfried: Ich habe nur ein tslice.cpx, und das ist immer 6034 Bytes.
  Vielleicht sind mir irgendwelche CPXe mal verloren gegangen.
- Wilfried: MGVIEW ist auf disk #2
- Wilfried: RMSLINK kann ich nicht finden. Wo sollte das liegen???
- Wilfried: MCMD.TOS lÑût sich bei mir problemlos mit dem Beenden des
  VT52 beenden. Das Binary enthÑlt die Zeichenfolge XBRAKLME, und dann geht
  es. Nur wenn das KLME nicht stimmt, bleibt MCMD im Speicher.
- Wilfried: Euer pdlg.slb macht bei slb_exit() irgendeinen Kram mit
  appl_init() und appl_exit().
  Bitte ENTFERNEN!!! TôDLICH!!!
- Wilfried: Ein Problem mit neuen Fenstern in MAGXDESK konnte ich nicht
  erkennen. Ich hatte 8 Fenster in MAGX.INF eingetragen und konnte dann
  ohne Probleme 20 îffnen.
- MAGXDESK: "RÅckwÑrtspfeil" statt ".." im Einstellungsdialog
- Release-Paket an ASH:
	neues MGEDIT
	neues MGSEARCH
	neue VDI-Treiber in gemsys/
	MGNOTICE in magic/start
	MAGX.INF enthÑlt "#_SLB PDLG.SLB"
	neue Kernel
	neues INSTMAGC
- DOS: Absturz beim automatischen Entfernen von SharedLibraries wÑhrend des
  Terminierens von Accessories beseitigt.
  Genau:
  Die slbclose-Funktion einer SharedLibrary wird normalerweise, d.h. wenn
  der usp gÅltig ist, im User-Modus aufgerufen.
  Beim Beenden eines Accessorys (egal ob per Pterm(), Pkill(), Ctrl-Alt-Esc
  usw.) war aber der usp undefiniert.
  Jetzt wird explizit ein NULL-Zeiger als usp eingetragen, dadurch wird
  das DOS veranlaût, die slbclose-Funktion der SharedLibrary im
  Supervisor-Modus aufzurufen.
- AES: Ich habe im Maus-Event-Handling eine Vereinfachung/Beschleunigung
  vorgenommen. Damit ist eine mîgliche Ursache fÅr die manchmal
  zer-formatierten MenÅs wÑhrend des IMG-Treiber-Drucks beseitigt.
  Ob es das bringt, weiû ich allerdings nicht. Bitte ausprobieren!

25.5.98
-------

- form_xdo: Bîsen öberlauffehler beim Zeichnen des Eselsohrs in 2D behoben.
  Gemeinerweise trat der Fehler mit den Ñlteren Mac-Bildschirmtreibern
  nicht auf, auch nicht mit NVDI 4.11 auf dem Atari.
  Folgender Effekt war zu beobachten: In S/W waren die Eselsohren komplett
  schwarz, und, wenn irgendwann irgendein Alert oder Dialog verschoben worden
  war, stÅrzte MagicMac beim Herunterfahren ab.
- MagiC-Installationsprogramm auf dem Mac: Das Programm hat offenbar noch
  einen Fehler. Alle Dateien erhalten dasselbe Datum, und zwar das Tagesdatum.
  So geht das natÅrlich nicht! Wie soll man da jemals die VersionsÅbersicht
  behalten?
- RELEASE-Archiv:
	- neues Magic.img (mit Rahmen)
	- neues TSLICE.CPX (grau)
	- neues PDLG.SLB (interne AES-Aufrufe)
	- neue Kernel fÅr Mac und Atari
  fehlt laut Behnes noch: neue OSD-Dateien. Da ich Åber diese Tierchen leider
  keine öbersicht habe, warte ich auf neue Dateinen von den Behnes.
- noch ein Problem: MGNOTICE muû bei zuwenig Farben automatisch S/W anzeigen.
  Das hat bei MGNOTICE 1.0 problemlos funktioniert, ich muû aber einen
  Ñhnlichen Mechanismus in die 2.0 einbauen.

29.5.98
-------

- DOS: Neue Dcntl-Modi eingefÅhrt, da sich die alten mit dem Minix-XFS
  beiûen. Alle MagiC-Codes haben jetzt ein 'm' im HighByte. UnberÅhrt davon
  bleiben die VFAT-Codes, die ihr 'V' behalten.
  Die neuen Codes sind in MagiC 6 Ñquivalent zu den alten, d.h. es werden
  beide Varianten erkannt:

	KER_GETINFO (0x0100) -> MX_KER_GETINFO (0x6d00)
	KER_DOSLIMITS (0x0101) -> MX_KER_DOSLIMITS (0x6d01)
	KER_INSTXFS (0x0200) -> MX_KER_INSTXFS (0x6d02)
	KER_DRVSTAT (0x0104) -> MX_KER_DRVSTAT (0x6d04)
	KER_XFSNAME (0x0105) -> MX_KER_XFSNAME (0x6d05)
	DEV_M_INSTALL (0xcd00) -> MX_DEV_INSTALL (0x6d20)
	DFS_GETINFO (0x1100) -> MX_DFS_GETINFO (0x6d40)
	DFS_INSTDFS (0x1200) -> MX_DFS_INSTDFS (0x6d41)

- MAGXDESK: Korrekte Fehlermeldung "Keine Fenster mehr." bei eben diesem
  Fehler.
- MAGXDESK: Kann leider den Fehler mit den kleinen Fenstern nicht
  nachvollziehen. Wenn ich "Arbeit sichern" aufrufe und mir die INF-Datei
  ansehe, ist sie immer 100% OK.
- MT_AES: MT_appl_search() korrigiert.
- EDITOBJC.SLB: Tîdlichen Fehler bei edit_set_font() korrigiert. Der Wechsel
  der Zeichensatzhîhe fÅhrte unter MGEDIT zum Programm-Absturz.
- MGEDIT: AbstÅrze entfernt, die durch Linken mit neuem MT_AES entstanden
  waren.
- MGNOTICE: Setzt die Zeichenfarbe automatisch auf Weiû, wenn der
  Hintergrund eine nicht darstellbare Farbe hat. D.h. Notizen, die schwarz
  auf gelb eingegeben wurden, erscheinen auf einem S/W-Bildschirm weiû
  auf schwarz (wie bei der alten MGNOTICE-Version).
- INSTMAGC: "#_DEV"-Zeile wird aus alter MAGX.INF Åbernommen.
- objc_draw(): Clipping-Fehler bei G_(F)(BOX)TEXT behoben.
- interner Fensterrahmen-Manager: BerÅcksichtigt Fensterfarben (WINCOLOUR)
  jetzt auch wieder fÅr Scrollbalken.
- rsrc_load(), shel_find(), Slbopen(): Ein Fehler in der zentralen
  Datei-Finde-Routine fÅhrte zu unvorhersagbaren Resultaten, wenn die PATH
  bzw. SLBPATH Variable leere Pfade enthielt oder mit einem ';'
  abgeschlossen war.
- RELEASE-Archiv:
	- neues PDLG.SLB
	- neue Kernel fÅr Atari und Mac
	- neues EDITOBJC.SLB
	- neues MGEDIT.APP
	- neues MAGXDESK.APP
	- neues MAGICICN.RSC
	- HRD entfernt
	- neues INSTMAGC.PRG
	- neues MGNOTICE.APP
	- neue OSD-Treiber
	- neue MFM-Treiber und OSD-Treiber fÅr Mac
	- MGNOTICE.TXT aus dem START-Ordner entfernt. Bitte, ASH, Åberlegt
	  Euch, ob die Anleitung fÅr MGNOTICE notwendig ist bzw. ob sie
	  im Handbuch in Papierform schon vorliegt.
- Kann leider auf dem Mac kein Problem beim Start von PAPILLON bei
  gedrÅckter Alt-Taste feststellen.
- AES: MT-sicherer Aufruf von vsc_form(). Vielleicht sind die Redraw-Probleme
  beim Umschalten der Applikation wÑhrend des IMG-Drucks jetzt beseitigt.
  Bitte ausprobieren!
- VFAT-XFS: Bei der Umwandlung eines Dateinamens in das 8+3 Format wurde fÅr
  den Fall, daû der Name mehrere Punkte enthÑlt und der eigentliche Dateiname
  8 Zeichen oder mehr enthÑlt, fÑlschlicherweise der Namensteil nach dem ersten
  Punkt als Erweiterung erkannt. Jetzt wird korrekt der Teil nach dem letzten
  Punkt verwendet.
- Bemerkung: Offenbar hat QED 4.5beta einen Fehler: Die Dateiauswahl bietet
  "*.*" statt "*" an. Damit werden Dateien ohne Erweiterung unsichtbar.
- neues MGFORMAT: Behandlung der MGFORMAT.INF wie bei den anderen Programmen,
  d.h. im ASCII-Format und aus $HOME. Bitte testen, damit wir uns jetzt nicht
  noch bîse Fehler einhandeln.

9.6.98 (release an ASH)
------

- Atari-Version: Supervisorstack pro Task von 5k auf 8k erhîht. Auf Wilfrieds
  Fo:ken gab es immer einen StapelÅberlauf beim Start von Programmen im
  "single mode". Auf dem TT trat der Fehler nicht auf.

20.6.98
-------

- Weiteren Fehler in QED 4.5beta gefunden: Nicht nur hat es Probleme mit
  Leerzeichen in Pfaden, sondern auch einen Fehler in der RSC: Die MenÅleiste
  ist nicht weiû, sondern schwarz. Daher wird das Flag FL3DBAK nicht, die
  MenÅleiste bleibt also weiû, auch wenn das entsprechende Bit in der
  MAGX.INF gesetzt ist.
- EDITOBJC.SLB: Backspace funktioniert jetzt auch, wenn der Cursor ganz
  links oben im sichtbaren Textausschnitt steht.
- Mac-XFS: Fehler in xfs_dpathconf() korrigiert. Modus DP_MODEATTR liefert
  jetzt das Bit DP_FT_LNK.
- Wilfried: Schick mir bitte mal die Angaben, die Dfree() fÅr Deine 4G-Platte
  liefert! Ich kann in Magxdesk keinen Fehler finden, und die Anzeigefunktion
  selbst ist i.o.

27.6.98
-------

- MAGXDESK: Ein Fehler bei Ctrl-W konnte in eine Endlosschleife fÅhren,
  wenn kein MAGXDESK-Fenster offen war. Ursache war nicht, wie Sven vermutet
  hatte, ein Deadlock.
  Neue Version an ASH.
- Bug im Mac-XFS: Die Funktion Dfree() arbeitet auf solchen Mac-Volumes nicht
  korrekt, die grîûer als 2 GB sind oder die mit HFS+ formatiert sind.
  Ersteres lieûe sich beheben, indem die seit System 7.5.2 vorhandene
  Mac-Funktion PBXGetVolInfo() statt bisher PBHGetVInfo() aufgerufen wird.
  Die neue Funktion hat zwar 64-Bit-Felder fÅr freie und belegte Bytes,
  jedoch sind die EintrÑge ioVFrBlk (Anzahl belegter Blîcke) und ioVNmAlBlks
  (Gesamtanzahl Blîcke) wie bei der alten Funktion nur 16-Bit groû. Sowas von
  Kurzsichtigkeit! Noch schîner: FÅr KompatibilitÑt lÅgen beide Funktionen im
  Eintrag ioVAlBlkSiz, der zwar 32-Bit groû ist, aber bei HFS+ Volumes
  kompletten Unsinn enthÑlt (riesige Blockgrîûen statt der tatsÑchlich
  vorhandenen 4k). Dieser Unsinn hat wohl das Ziel, das Produkt aus
  ioVAlBlkSiz und ioVNmAlBlks immer dicht bei 2GB zu halten.
  Fazit: Weder beim Compiler noch auf Apples WWW-Seiten gibt es den Hauch
  eines Systemaufrufs, mit dem sich die Blockgrîûe von HFS+ Volumes
  abfragen lÑût.
  Kein Wunder, daû Apple bis jetzt noch kein vernÅnftiges Betriebssystem
  geschrieben hat. Erst die Oberpanne mit dem kaputten PBFlushVol(), und nun
  ein nicht existierender Aufruf!
- An Sven&Wilfried:
  NAME und INFO von Fenster #0 werden beim Start des AES auf "" initialisiert.
  Sie kînnten nur geÑndert werden, wenn w_kind das Bit fÅr NAME bzw. INFO
  enthielte, was aber nicht der Fall ist, da der Fenstertyp immer 0 ist.
- An Sven&Wilfried:
  In der Tat kann ein GerÑtetreiber erkennen, ob er als Standard-GerÑt (<0)
  geîffnet worden ist oder nicht. Standard-GerÑte haben stets fd_refcnt == -1.
  Sie werden bei der Initialisierung des Systems sowie bei
  Fforce(neg_hdl, ...) erzeugt.
  fd_refcnt ist normalerweise 1. Es wird nur dann erhîht, wenn ein Prozeû
  per Fforce() ein Standard-Handle auf dieses Handle umlenkt. Dann ist
  fd_refcnt 2. Wenn nun der Prozeû Kinder und Kindeskinder bekommt, wird
  fd_refcnt jedesmal erhîht. Auch dann, wenn andere Standardhandles ebenfalls
  auf dieses Handle umgelenkt werden. Ein fd_refcnt von drei kînnte z.B.
  bedeuten:

	FD referenzierbar als Prozeû A, Handle 6.
	FD referenzierbar als Prozeû A, Handle 1.
	FD referenzierbar als Prozeû B (Kind von A), Handle 1.

  Damit kînnte der Druckertreiber so aussehen:

  LONG write( FD *fd, LONG count, char *buf )
  {
  	LONG err;
  
  	if	(fd->refcnt == -1)
  		... Schnittstelle îffnen ...
  	err = DruckAusgabe( buf, count );
  	if	(fd->refcnt == -1)
  		... Schnittstelle schlieûen ...
  	return( err );
  }

29.6.98
-------

- Heute eine lÑngere Debugging-Session auf dem guten alten TT. Leider lÑuft
  die Maus nur noch horizontal. Auch mal nett...
- énderung im AES:
  MenÅs: Ist ein MenÅ zu groû (paût nicht in den festen Bildschirmpuffer), so
  wird dieser feste Bildschirmpuffer zumindest ungÅltig gemacht, damit beim
  Restore (MenÅ wieder verlassen) kein Mist auf den Bildschirm kommt.
  Beispiel: Das "Bearbeiten" MenÅ in QED.
- Beim Einfrieren von Applikationen (z.B. beim "single start") war offenbar
  seit langem (MagiX 1.0 ???) ein Fehler beim Verstecken der Fenster, der
  mîglicherweise nur dann auftrat, wenn mehrere Applikationen Fenster offen
  hatten und die Fenster eine bestimmte Reihenfolge hatten.
  Es ist mir aber schleierhaft, warum der Fehler auf dem Mac nicht auftrat
  und warum nicht schon frÅher. Ich weiû auch nicht, ob ich den Fehler
  tatsÑchlich beseitigt habe.
  Bitte, Ihr alle, die Ihr werweiûwasfÅr Probleme mit dem Start von
  Programmen im "single mode" hattet, probiert die neue Version mal tÅchtig
  aus!
- Liebe ASH-ler: Bitte setzt die neuen Release-Versionen fÅr Atari und Mac
  nur dann ein, wenn das "single mode" Problem behoben ist!
- Nur noch einmal mein Wissens-Status zum "asynchroner Dateitransfer" Problem:

  - Probleme gibt es durch die Mac-Funktion PBFlushvol(). Diese wird von
    WBDAEMON und nur von WBDAEMON aufgerufen.
    Diese Funktion ist in sÑmtlichen mir bekannten Versionen des
    MacOS kaputt (getestet mit 7.5, 7.6 und 8.1)!!!
  - Probleme gibt es nur auf dem MacOS-Boot-Volume.
  - Auf den meisten Macs (AWS 95, PB 68k) konnte ich das Problem umgehen,
    indem ich eine Semaphore eingebaut habe, die den Aufruf von PBFlushvol()
    wÑhrend eines laufenden asynchronen Transfers verhindert.
    Das klappt aber offenbar auf den neuen G3 Macs nicht mehr.

  Fazit:

  - Wer einen alten Mac hat, sollte unbedingt (!) den asynchronen Transfer
    einschalten und WBDAEMON aktivieren. LÑuft super!
  - Bei wem es knallt, sollte entweder WBDAEMON weglassen (ausprobieren, ob
    ein Absturz von MM Verlust von Daten nach sich zieht!), auf den
    asynchronen Transfer verzichten oder ein vernÅnftiges Betriebssystem
    installieren (NT 5.0).

4.7.98
------

- AES: Bîsen Fehler bei der Berechnung des Bildschirmpuffers fÅr MenÅs und
  Alerts behoben. Dieser Fehler trat nur bei Verwendung von proportionalen
  AES-ZeichensÑtzen auf (das intout[]-Feld war zu klein und Åberschrieb
  den folgenden Speicher).
  Dieser Fehler dÅrfte fÅr die klebenden MenÅs bei der Verwendung von
  Nova-Grafikkarten auf dem Atari verantwortlich sein. Auf meinem Mac
  wirkte sich der Fehler nur so aus, daû 500k statt 300k Puffer angefordert
  wurden.
  Release an ASH.
- WINFRAME.SLB: Beim éndern von Fensterposition oder -grîûe eines ge-shade-ten
  Fensters wurde der Arbeitsbereich (W_WORK) falsch berechnet. Sollte jetzt
  korrigiert sein.

13.7.98
-------

- Neues EDIT-Objekt:
  Zwar hatte ich in EDITOB schon immer vorgesehen, beliebige Zeilen-Enden 
  zu berÅcksichtigen (CR, LF, CRLF), das hatte ich aber nie zu Ende gefÅhrt, 
  daher klappte es nur mit CRLF.
  Das habe ich versucht zu korrigieren. Eigentlich sollte jetzt jedes
  mîgliche Zeilen-Ende erkannt werden, d.h. CR,LF,CRLF und LFCR.

  EDITOB unterscheidet nicht zwischen UNIX-Text und DOS-Text usw.,
  sondern beim BetÑtigen von [Return] wird _IMMER_ ein CRLF eingefÅgt.
  Andere Zeilen-Enden werden erkannt, aber nicht erzeugt. In einer Datei
  kînnen beliebig verschiedene Zeilen-Enden vorkommen.

18.7.98 (Version 6.01)
-------

- Neue Bibliothek MT_DOS.LIB enthÑlt fehlende DOS-Aufufe fÅr PureC. Das
  alte Binding SLB_BIND.C sollte nicht mehr verwendet werden, weil es
  nicht MT-sicher ist.
- Mac-XFS: Dfree() funktioniert jetzt auch auf HFS-Plus-Volumes. Neuen
  Quelltext an Tempi verschickt.
  Achtung: Das Produkt aus Sektorgrîûe, Clustergrîûe und Cluster-Anzahl
  kann jetzt natÅrlich grîûer als 32 Bit sein (mit 32 Bit ohne VZ kînnen
  genau 4 GB verarbeitet werden).
  Vorschlag: ZunÑchst Sektorgrîûe mit Anzahl Sektoren pro Cluster
  multiplizieren. Hoffen, daû das Ergebnis durch 1024 teilbar ist (ggf. mit
  AND Operation sicherstellen). Das Ergebnis dann um 10 Bit nach rechts
  schieben und erst dann mit der Cluster-Anzahl multiplizieren. Das Ergebnis
  ist dann die Anzahl der kB.
- BIOS: Bei in eine Datei umgelenkter Bildschirmausgabe wÑhrend des
  Bootvorgangs war ein "critical error" leider tîdlich, da es zu einer
  Rekursion kam. Der Handler macht nÑmlich seine Ausgabe "Abbruch, Wiederholen,
  Ignorieren" auf das BIOS-GerÑt 2, welches seinerseits wiederum
  auf eine Datei umgelenkt ist.
  Ich habe daher eine Semaphore eingefÅhrt, die durch den CEH verwaltet wird
  und anhand der die umgelenkte Ausgaberoutine feststellen kann, daû
  sie sich im CEH befindet. In diesem Fall wird der alte Vektor aufgerufen,
  d.h. der CEH erscheint wie bisher auf dem Bildschirm.

21.7.98
-------

- MGCOPY: Wird ein Ordner im Modus "öberschreiben" oder "Backup" kopiert
  und existiert das Zielobjekt schon, jedoch nicht als Ordner, so wird
  wie im Modus "BestÑtigen" verfahren, d.h. es îffnet sich ein Dialog.
- MGCOPY: Wird ein Ordner kopiert und existiert das Zielobjekt schon, jedoch
  nicht als Ordner (d.h. als Datei oder Alias oder GerÑt), so wird im Modus
  "BestÑtigen" statt des Ordner-Dialogs "Benutzen, OK, Abbruch" nun der
  Datei-Dialog mit "öberspringen, OK, Abbruch" geîffnet.
  Dadurch gibt es keinen érger mehr mit ungÅltigen Zielpfaden, wenn der
  Quellordner weitere Dateien enthielt (man kann eben einen Nicht-Ordner
  nicht "benutzen").
- MGCOPY: Wird ein Ordner innerhalb eines Laufwerks bzw. Volumes verschoben
  und existiert der Ordner bereits, so wird er im Modus "Backup" und
  "öberschreiben" ohne RÅckfrage benutzt.

29.7.98
-------

- Beispiel-MAGX.INF auf der Auslieferungs-Diskette:
  Eintrag _FSL ergÑnzt (hatte ich vergessen, existiert seit MagiC 5.10)
- Bîsen (!) Tippfehler in INSTMAGC behoben: APPLICAT.INF und APPLICAT.DAT
  wurden beim Installieren gnadenlos Åberschrieben, falls sie schon
  vorhanden waren.

2.8.98
------

- Neuen Fehler in QED gefunden: Die Auswertung der Kommandozeile funktioniert
  nicht, wenn der Dateiname zwei Leerzeichen hintereinander enthÑlt.
- MGCOPY: Beim Verschieben auf demselben Laufwerk werden Dateien im
  Modus "BestÑtigen" nicht mehr ÅbergebÅgelt. Der Fehler hatte sich in
  der Version vom 21.7. eingeschlichen.
- WINFRDEM.LZH enthÑlt einen einfachen Fensterrahmen-Manager fÅr MagiC 6,
  der als Vorlage fÅr eigene Experimente dienen kann. Die SLB enthÑlt nur
  das allernîtigste, die Rahmen sind dementsprechend "schlicht".

8.8.98
------

- WINFRAME.SLB: Bei ge-shade-tem Fenster wird die rechte Ecke des
  Fensterbalkens nicht mehr fÑlschlich als Vergrîûerungsfeld erkannt.
- MAGXDESK 4.01: Bei der öbergabe von Dateinamen via Kommandozeile oder
  D&D oder VA_START werden Dateinamen, die Leerzeichen und Hochkommata (')
  enthalten, jetzt (hoffentlich) korrekt behandelt, indem nÑmlich alle
  Hochkommata verdoppelt werden.
- MGVIEW: VA_START entfernt doppelte Hochkommata von ge-quote-ten Dateinamen.
- MGEDIT: VA_START entfernt doppelte Hochkommata von ge-quote-ten Dateinamen.

19.8.98
-------

- MAGXDESK: Sicherheitsabfrage fÅr fehlerhafte MAGX.INF mit Icons auûerhalb
  des sichtbaren Bereichs.
- MGCOPY: Rechnet auf dem Zielpfad nicht mehr mit Bytes, sondern mit
  Clustern, daher sollte es jetzt auf Laufwerken > 2GB keine Probleme
  mehr geben ("Zuwenig Plattenplatz", obwohl Laufwerk fast leer).
- MGCOPY und MAGXDESK: Pfadtiefe jetzt maximal 12 statt 8 Ebenen, maximale
  PfadlÑnge 256 statt bisher 128 Zeichen, wobei der Pfad in der tiefsten
  Ebene nur 189 Zeichen lang sein darf, damit Dateien mit max. 64 Zeichen
  LÑnge daran noch angehÑngt werden kînnen.

9.10.98 (Version 6.10alpha)
-------

- EDITOBJC.SLB: Bei leerem Text schaltet ^A nicht mehr fÑlschlicherweise den
  Cursor aus, ohne daû man ihn wieder anschalten konnte.
- EDITOBJC.SLB: ^Y wird ausgewertet: Ist kein Block selektiert, so wird die
  aktuelle Zeile selektiert. Anschlieûend wird wie bei ^X vorgegangen.
  D.h. ^Y lîscht den selektierten Block bzw. die aktuelle Zeile.
- AES: form_alert() und form_(x)error() verwenden nicht mehr F1,F2,F3 als
  TastaturkÅrzel fÅr die Dialoge, sondern ordnet selbstÑndig den Buttons
  Alt-Buchstabe Kombinationen zu. Bei gleichen Anfangsbuchstaben wird ggf.
  der zweite, dritte usw. Buchstabe unterstrichen, wobei der Default-Button
  PrioritÑt hat. Leerzeichen werden ignoriert.
- Bin in Trauer: Mein DAT ist endgÅltig hin. Jetzt kann ich mir meine
  schînen Cassetten in eine Glasvitrine stellen.
- MAGXDESK: In der MAGX.INF wird jetzt auch der Fall abgespeichert,
  daû alle Fenster gleichzeitig per Ctrl-Iconify ikonifiziert wurden. Bisher
  funktionierte das nicht, und es war immer nur ein Fenster ikonifiziert.
- AES: Bei Verwendung des Clipboards in Eingabefeldern wird der Fall
  abgefangen, daû irgendein Schweineprogramm einen SCRAP-Pfad ohne
  abschlieûenden Backslash eingestellt hat (d.h. der fehlende Backslash wird
  ergÑnzt).
- DOS: Psetpgrp() und Pgetpgrp() implementiert.
- DOS: Pkill mit Parameter pid=0 und pid<0 implementiert.

1.11.98
-------

- FAT_DFS: UnterstÅtzung von 32-Bit FATs. Da es leider keine vernÅnftige
  Mîglichkeit gibt, auf dem Atari eine FAT32-Partition einzurichten, hier
  eine Vorgehensweise:

	1. HDDRUTIL aufrufen.
	2. Eine Partition mit Kennung F32 anlegen. Laufwerkbuchstabe sei X:.
	3. mkfatfs aus dem freemint-1.15 Paket besorgen.
	4. Aufruf (ggf. Parameter ergÑnzen): "mkfatfs X:"

  Die Partition sollte nun sowohl mit freemint-1.15 als auch mit MagiC
  angesprochen werden kînnen.

  EinschrÑnkungen:

	1. Es werden nur max. 2 FATs unterstÅtzt.
	2. Der INFO-Sektor wird noch nicht richtig ausgewertet.
	3. Ich habe es auf dem Mac noch nicht getestet. Mîglicherweise
	   braucht man dazu den SCSI-Treiber

- DOS: Pexec() Modus 200 eingebaut. Eigentlich wollte ich Pfork() und
  Pvfork() einbauen, aber das ist nur grausam. So kopiert der Kernel von
  MiNT bei einem Pfork()-ten Prozeû z.B. bei jedem Taskwechsel alle
  Speicherblîcke hin und her, damit ein Prozeû nicht den Speicher des
  anderen beeinflussen kann.

12.11.98
--------

- WBDAEMON.PRG mit FPU_PATCH behandelt.
- MAGXDESK: Fehler bei der Berechnung des Inhalts von Ordnern behoben.
  Es wurde die Grîûe der normalen Dateien zur Anzahl (!) der versteckten
  Dateien addiert.
- MAGXDESK: Der Dialog "Disk-Info" sowie der Alert, der beim Klicken auf
  die Fenster-Infozeile erscheint, verwenden fÅr die gesamten, freien
  und belegten Bytes auf dem Laufwerk 64-Bit-Arithmetik.
  Damit kînnen auch Laufwerke mit mehr als 4 Gigabyte KapazitÑt korrekt
  behandelt werden. Bei diesen Laufwerken werden ggf. kBytes statt Bytes
  angegeben, die Laufwerke dÅrfen also max. 4 Terabytes groû sein.

  Die Arithmetik verwendet nicht den "mulu.l dm,dh:dl"-Aufruf, da der
  leider erst ab 68020 existiert, sondern normale 16-Bit-Multiplikationen,
  die auch der 68000 kann.
- MAGXDESK: Die Dialoge "Datei-Info" und "Ordner-Info" verwenden bei der
  Anzahl der Bytes Tausenderkommas.
- MAGXDESK: Wird bei AV_STARTPROG ein nicht angemeldeter Dateityp Åbergeben,
  wird jetzt automatisch das Default-Anzeigeprogramm (i.a. MGVIEW)
  gestartet. Der ASH Emailer kann jetzt also die Textdateien anzeigen.
  Man hÑtte allerdings auch MGVIEW auf den Dateityp *.SND anmelden kînnen.
- DFS_FAT: Die Anzahl der freien Cluster wird jetzt fÅr jedes Laufwerk
  gepuffert, damit ist nur fÅr den ersten Dfree()-Aufruf ein Plattenzugriff
  notwendig.
- AES: Fehler bei wdlg_open() beseitigt. War kein Fenster mehr frei, so
  wurde trotzdem das Wurzelobjekt des Dialogs modifiziert (OUTLINED entfernt).
- AES: Fehler bei diversen Objekttypen beseitigt, der auftrat, wenn die
  Zeichenhîhe grîûer als die Objekthîhe ist. Typischerweise ist dies
  der Fall bei Vektor-ZeichensÑtzen, z.B. bei "Lucida Sans Unicode" mit einer
  Hîhe von mindestens 12 Pixeln.
  Zu erkennen war das Problem z.B. im "Suchen"-Dialog von PureC: Das
  Eingabefeld hatte eine zerstîrte untere Linie, da das Objekt zu groû
  gezeichnet wurde (Åber die logische Objektgrenze hinweg). Dementsprechend
  war auch der Cursor immer etwas zu kurz.
- MAGXDESK 4: Das Tausenderkomma wird jetzt aus der RSC-Datei geholt, damit
  wird "1.024" in der UK-Version zu "1,024".
- MAGXDESK 4: Der ".."-Eintrag in einem Verzeichnis wird jetzt beim
  Sortieren ausgenommen. Damit ist garantiert, daû er auch dann an erster
  Stelle steht, wenn es z.B. ein Verzeichnis "-hallo" gibt.
- Bîsen Fehler bei FAT32 beseitigt. Er trat bei Fseek() auf, wenn eine
  Clusternummer grîûer als 16 Bit war.

2.1.99
------

- Kleinen Fehler in der Programmladeroutine gefunden: Manfred Lippert hatte
  zwei fast identische SLBs, von denen die eine geladen werden konnte und
  die andere nicht. Ich muûte dem Problem auf dem guten alten TT mit dem
  Templmon zu Leibe rÅcken, um die Ursache zu finden:
  Die Programmladeroutine lÑdt die Relokationstabelle bzw. immer einen
  mîglichst groûen Teil davon in den Speicher, um die Relozierung
  durchzufÅhren. Als Puffer dienen dabei BSS und Heap des geladenen Programms.
  Nun hat eine SLB aber keinen Heap, und Manfreds SLBs haben auch kein BSS,
  folglich konnte die Relozierung nicht durchgefÅhrt werden. Gemeinerweise
  hatte aber die zweite SLB einen Mini-Heap von 2 Bytes, der dadurch
  zustande kam, daû die LÑnge von TEXT+DATA nicht durch 4 teilbar ist,
  MagiC aber intern mit Langwortadressen arbeitet und daher 2 Bytes mehr
  allozierte, als die SLB netto benîtigte.

  Abhilfe: Ich kînnte das Problem zwar beseitigen, aber dann wÅrden
  problematische SLBs erst ab MagiC 6.10 laufen. Alternativ kann man eine
  SLB schreiben und sie, wenn sie sich nicht laden lÑût, irgendwo um 2 Bytes
  verlÑngern. Die einfachste Lîsung ist, ein Dummy-BSS von vielleicht
  16 Bytes zu erstellen.
- Kleinen Fehler in MAGXDESK beseitigt: Wurde beim Doppelklick auf den
  Fenstertitel die Maustaste gedrÅckt gehalten, so erschien fÑlschlicherweise
  der Alert, der den freien Speicher auf dem Laufwerk anzeigt, wenn man
  auf das INFO-Feld klickt.
  Um das Problem zu beseitigen, muûte ich die Mîglichkeit schaffen, die
  Ausmaûe des INFO-Feldes abzufragen, daher funktioniert das neue MAGXDESK,
  bei dem der Fehler behoben ist, richtig nur mit einem neuen MagiC (bei
  Ñlteren dÅrfte Åberhaupt nie ein Alert erscheinen).
- (V)FAT-XFS: Prozesse dÅrfen in der MiNT-Domain schreibgeschÅtzte Dateien
  umbenennen. In der TOS-Domain wird aus KompatibilitÑtsgrÅnden immer
  noch EACCDN geliefert.
- FAT-DFS: Bîsen Fehler bei Dfree() behoben. Der neue Mechanismus mit dem
  Cache fÅr die Anzahl freier Cluster funktionierte nur dann, wenn vor dem
  ersten Schreibzugriff auf das Dateisystem Dfree() aufgerufen wurde, z.B.
  beim ôffnen eines Fensters in MAGXDESK.
- Pfork() implementiert. -> MAGX_DOS.TXT
- Taskmanager Åberarbeitet. Sieht zwar jetzt komisch aus, weil nicht
  genÅgend Platz fÅr die Zeichenkette "Bytes" ist, aber es werden die
  neueren Wartemodi "warten auf Fork" und "warten auf pid" angezeigt.
- Fcntl(F_SETSHMBLK) Åberarbeitet. Der Speicherblock wird nun tatsÑchlich als
  "shared memory" behandelt. D.h. er erhÑlt einen ReferenzzÑhler, der durch
  den Aufruf erhîht wird. Durch Lîschen der Datei wird der ReferenzÑhler wieder
  dekrementiert und ggf. der Speicherblock freigegeben.
  Bisher hat jeder Aufruf von Mfree() den Block freigegeben, auch wÑhrend er
  an die Pseudodatei angekoppelt war.
- Fcntl(F_SETSHMBLK) liefert, wie MiNT, ERANGE, wenn bereits ein Block
  zugewiesen wurde.

24.1.99
-------

- MT_AES: te_colour fÅr TEDINFO durch eine Bit-Struktur ersetzt.
- APPLICAT.APP: Internes Icon fÅr RÅckwÑrtspfeil ergÑnzt.
- MagicMac: Fsymlink() erzeugt fÅr Aliase, deren Original ein Pfad ist,
  ein Ordner-Icon statt eines Datei-Icons fÅr den Finder.
- Dateiauswahl: LÑuft die Dateiauswahl im Fenster, lÑût sich der Dialog
  horizontal vergrîûern. Die neue Grîûe wird bis zum Neu-Boot beibehalten
  und gilt auch fÅr die Dateiauswahl im Dialog. Bisher gibt es aber keine
  Mîglichkeit, die Grîûe in der MAGX.INF zu sichern.
- Dateiauswahl: Macht den Dxreaddir()-Aufruf jetzt mit gerader Adresse.

19.2.99
-------

- Diverse Korrekturen an der Dateiauswahl.
- MGX_DOS.TXT erweitert.
- MGNOTICE: Doppelklick bringt das Programm nach oben, damit die Texteingaben
  in das Notizfenster gehen.
- MGEDIT: Verwendet Dateiauswahl im Fenster.
- MGCOPY: Bei einer Clustergrîûe von 512 Bytes wurde der Speicherbedarf beim
  Kopieren fÑlschlicherweise abgerundet, so daû eine Datei mit z.B. 287 Bytes
  als "0 kBytes" angezeigt wurde. Jetzt wird aufgerundet.
  Beim Lîschen wird, wie bisher, die Clustergrîûe nicht bestimmt, sondern
  alle Dateigrîûen in 1024-Byte-Einheiten angegeben. Daher trat der
  Rundungsfehler hier nicht auf.

25.2.99
-------

- Beim ersten Ausprobieren von MPC unter VPC gleich einen Fehler in 
  Mdesk5 gefunden: Im Fenster wird angezeigt "1,: GB frei", wenn 
  65535 Cluster mit 32kB Grîûe frei sind. Diese Grîûe wird   
  typischerweise Windows95 untergejubelt, wenn ein Volume grîûer als  
  2GB ist (Windows95 kann, wie auch die zugehîrige Stufe des SMB-
  "Protokolls", keine Laufwerke mit mehr als 2 GB, jedenfalls nicht 
  in der Protokollstufe 139, sondern erst in Stufe 158, jeweils so 
  ungefÑhr...)
- Signalhandler werden jetzt bei P(v)fork() vererbt.
- Der Absturz beim BetÑtigen des MagiC-Popup bei installiertem MAGTOROM und
  proportionalem groûem AES-Zeichensatz ist behoben.
- Auf Wunsch von Oliver F1-F3 fÅr Alertboxen wieder aktiviert.
- Neue Version des VT52 mit neuer Systemanbindung gemacht. Er lÑuft nur mit dem
  neuen MagiC-Kernel zusammen, macht aber mit dem alten Kernel nicht viel
  falsch (der DOS-Zeileneditor funktioniert nicht).
  Sicherheitshalber habe ich die Anbindung an die alte Version des VT52 noch
  im MagiC-Kernel dringelassen, ich werde sie aber irgendwann entfernen.

  FÅr den Anwender sind nur folgende énderungen sichtbar:

	- Es sollte etwas "Thread-fester" sein, da fÅr jedes Terminalfenster
	  eine Liste aller Tasks (d.h. auch Threads, Signalhandler und per
	  GEMDOS mit Pexec(10x) oder P(v)fork() erzeugte Tasks) gefÅhrt wird,
	  die dieses Fenster benutzen. Der Umbau ist aber noch nicht fertig,
	  auch ziemlich aufwendig, da VT52 ursprÅnglich fÅr eine 1-1 Beziehung
	  zwischen Task und Terminalfenster konzipiert war.
	- Wenn zuwenige Fenster zur VerfÅgung stehen, gibt es kein Speicherleck
	  mehr beim ôffnen eines neuen Fensters.
	- "Buffer" heiût jetzt "Puffer".
	- Das Ikonifizieren klappt so halb. Die ikonifizierten Fenster zeigen
	  noch nichts vernÅnftiges an, das De-ikonifizieren erzeugt manchmal
	  MÅll, und das All-Ikonifizieren funktioniert noch Åberhaupt nicht.

13.3.99
-------

- Fcntl(PLOADINFO) eingebaut. Funktioniert leider nur mit solchen Programmen,
  die "normal" gestartet werden, also z.B. nicht mit ACCs.

18.3.99 (Version 6.10 gamma, als Release an ASH)
-------

- MAGXDESK5: Auto-Update fÅr die Laufwerke A: und B: nur noch auf dem Mac.

27.3.99
-------

- (X)BIOS: negative Funktionsnummern fÅhren nicht mehr zum Systemabsturz.

5.4.99
------

- Atari: Neue Behandlung der Echtzeituhren. Falls UnregelmÑûigkeiten auftreten,
  bitte melden.
- Atari: Beim Ermitteln und Setzen der IKBD-Uhr werden Werte 0..79 hoffentlich
  jetzt korrekt als 2000 bis 2079 interpretiert. Das sollte jedoch nur Ñltere
  STs ohne Echtzeituhr betreffen.
- shel_write() verarbeitet jetzt auch Kommandozeilen mit mehr als 32k LÑnge.
  Damit kommt MGCOPY auch mit vielen Dateien klar, wenn es zum ersten Mal
  gestartet wird (spÑter werden Parameter Åber VA_START Åbergeben).

9.4.99
------

- MGEDIT: Das Beenden des Programms kann mit "Abbruch" im Alert
  "Datei sichern? Ja/Nein/Abbruch" abgebrochen werden.


Version 6.20

2.5.99
------

- Dies ist eine Testversion, daher bitte die alte 6.10 behalten! Die groûen
  Umbauten enthalten bestimmt noch manchen Fehler!
  Die gesamte Pexec()-Behandlung ist neu geschrieben, auûerdem alles, was
  mit Datei-Handles zu tun hat. Diese Version speichert die Handles lokal zu
  jedem Prozeû, auûerdem wird der F_SETFD/F_GETFD-Kram sowie O_NOINHERIT
  unterstÅtzt. P(v)fork() sollte also mit dieser Version richtig funktionieren.
- Fcntl(F_DUPFD) eingebaut.
- Fdup() dupliziert alle Handles.
- Fforce() kann alle Handles umleiten.
- Auûerdem habe ich die Routine mit den bidirektionalen Pipes Åberarbeitet.
  Sie sollte jetzt so wie unter MiNT funktionieren und die "creator"-Seite
  nur einmal vergeben, und zwar beim Erstellen. Jedes weitere ôffnen îffnet
  die "client"-Seite.

10.5.99
-------

- Dusselig: Offenbar habe ich beim letzten Verschicken eine alte
  Version erwischt. Also erst heute der neue DOS-Kernel, dafÅr bereits mit
  behobenen Fehlern.
- DOS: Diverse Fehlerkorrekturen im Zusammenhang mit dem neuen Handle-
  Konzept (Shutdown, Fcntl(F_DUPFD), Prozeûname bei Pexec(200), ...).
- AES (MenÅ-Manager): FÑhrt man mit der Maus ins MenÅ, wird der Bildschirm
  nicht mehr bis zum nÑchsten Mausklick gesperrt, wenn der Mauszeiger Åber
  einen DISABLE-ten MenÅeintrag bewegt wurde.

13.6.99
-------

- VT52: Jetzt funktioniert auch das Ikonfizieren. Ikonifizierte Fenster
  werden mit einem Image als Inhalt dargestellt, eine Eingabe, Ausgabe oder
  Markierung ist nicht mîglich. Macht ein Programm Ausgaben in das Fenster,
  wird dies am Wechsel des Fensterinhalts sichtbar.

17.6.99
-------

- Fcntl(F_DUPFD) gibt bei Erfolg im Hiword keinen MÅll mehr zurÅck.

22.6.99
-------

- Titelbild auf dem Mac geht wieder.
- Beim Erstellen einer Pipe wird das Flag fÅr "Pseudo-TTY" zumindest insoweit
  ausgewertet, als bei einem "Seek" fÅr solche Pipes 0 statt EACCDN
  zurÅckgegeben wird.
- Permanent lange Dateinamen fÅr U: einstellbar. Da sich U: nicht un-mounten
  lÑût, werden die langen Namen "temporÑr" eingeschaltet.

2.6.99
------

- Fclose() schlieût fÅr Prozesse in der MiNT-Domain auch die Standard-
  Dateien 0..5. FÅr Prozesse in der TOS-Domain werden nach wie vor die
  entsprechenden BIOS-GerÑte eingetragen.

3.6.99
------

- DOS Ssysconf() mit den Unterfunktionen 0,1,2 eingebaut.

30.6.99
-------

- AES: FÅr die Position des Unterstrichs, z.B. bei Buttons, werden nur noch
  die Bits 8-11 verwendet, wie es bereits in der Dokumentation OBTYPES.TXT
  beschrieben ist. Damit gilt fÅr das High-Byte von ob_state:

  0x00 - 0x0f		genau einen Buchstaben unterstreichen
  0x10 - 0xfe		reserviert
  0xff			das ganze Objekt unterstreichen

- MAGXDESK: "Original finden" fÅhrt bei ungÅltigem Alias-Inhalt nicht mehr
  zum Busfehler.
- AES, MenÅ-Manager: Ich habe das BEG_MCTRL entfernt, damit TastendrÅcke bei
  heruntergeklapptem MenÅ nicht beim SCRENMGR, sondern (wie vor MagiC 5.1)
  bei der Applikation landen.
- Die Umlenkung der Boot-Ausgaben sollte jetzt wieder funktionieren. Ich habe
  fÅr den Zugriff auf das Dateihandle den Zeiger auf den aktuellen Prozeû
  kurz umgebogen. Keine schîne Lîsung, aber geht.

11.7.99
-------

- Die Domain (TOS/MiNT) wird bei Fork() vererbt.

5.8.99
------

- Die Umstellung des Handle-Konzepts auf MiNT-konforme prozeûlokale 
  Handles, auch fÅr die GerÑte-Handles -1,-2 und -3, hat mit sich 
  gebracht, daû die alte Umlenkung der GerÑte-Handles und damit auch 
  der Standard-Handles 0..5 auf andere GerÑtetreiber (z.B. 
  "u:/dev/xyz") nicht mehr funktionieren kann und darf.

  Aus diesem Grund habe ich, Ñhnlich wie in MiNT, neue EintrÑge im 
  [boot]-Abschnitt der MAGX.INF eingefÅhrt, mit denen diese Umlenkung 
  erfolgen kann. Weiterhin habe ich die Boot-Reihenfolge etwas 
  geÑndert und die Mîglichkeit eingefÅhrt, das Verzeichnis u:/dev 
  besser an den eigenen Rechner, z.B. den Milan, anzupassen. Das wird 
  z.B. dann interessant, wenn weniger (etwa kein MIDI) oder mehr 
  (mehrere serielle Schnittstellen) existieren als beim Original-
  Atari (bisher waren Namen und Anzahl abhÑngig vom Rechnertyp, was 
  aber auf Macs und Milanen nicht sinnvoll ist).

  Das Konzept im einzelnen:

	1. Beim Booten werden zunÑchst alle GerÑte in U:\DEV und 
	   alle Handles normal angelegt, so daû sich fÅr den 
	   Hddriver, der DOS-Aufrufe zur Texteingabe/-ausgabe 
	   verwendet, keine énderungen ergeben.
	2. Dann wird die Datei MAGX.INF eingelesen.
	3. Es werden alle Handles -4 bis 5 wieder geschlossen und 
	   damit ungÅltig. Weiterhin werden alle GerÑte auûer NULL aus 
	   U:\DEV wieder gelîscht.
	4. GerÑtetreiber und Dateisystemtreiber werden geladen. Diese 
	   kînnen dann natÅrlich keine DOS-Aufrufe auf GerÑtehandles 
	   machen. Es mÅssen BIOS-Aufrufe verwendet werden. So ein 
	   Treiber kînnte sich daher aber z.B. als U:\DEV\CON 
	   installieren.
	5. Aus dem Abschnitt [boot] der MAGX.INF werden alle EintrÑge 
	   mit dem SchlÅsselwort "biosdev" bearbeitet. Hier kann man zum 
	   Beispiel eine zweite serielle Schnittstelle mit 
	   "biosdev=7,u:\dev\modem2" anmelden.
	   Die hier eingetragenen GerÑte verwenden einen sehr einfachen 
	   DOS-Treiber, der lediglich die BIOS-Funktionen aufruft, bis 
	   auf GerÑt 2 (mit Zeilen-Editor) und GerÑt 3 (ostat und istat 
	   sind bei MIDI vertauscht).
	6. Wenn die GerÑtedateien noch nicht existieren, werden 
	   "u:/dev/con" mit BIOS-GerÑt 2, "u:/dev/prn" mit BIOS-
	   GerÑt 0 und "u:/dev/aux" mit BIOS-GerÑt 1 zum zweiten Mal 
	   erstellt.
	7. Aus dem Abschnitt [boot] der MAGX.INF werden alle EintrÑge 
	   mit dem SchlÅsselwort "con", "aux" oder "prn" bearbeitet. 
	   Hier kann man zum Beispiel die Tastatureingabe Åber Handle -1 
	   auf ein anderes GerÑt legen. Oder ein anderes Beispiel: 
	   "prn=u:\dev\fastprn" meldet einen anderen Treiber fÅr Handle
	   -3 an.
	8. Jetzt werden alle noch nicht zugewiesenen Handles -1,-2 und
	   -3 mit den Åblichen Dateien belegt, z.B. Handle -1 mit 
	   "u:\dev\con".
	9. Schlieûlich werden die Standard-Handles des Boot-Prozesses 
	   mit den negativen Handles belegt, also z.B. Handle 0 und 1 
	   mit Handle -1.

  Da ohne énderungen an der MAGX.INF ein paar Dateinamen in u:/dev 
  fehlen werden, hier einige Beispiele fÅr verschiedene Rechnertypen, 
  die zu ergÑnzen sind:

		Atari ST:
		biosdev=3,u:\dev\midi
		biosdev=6,u:\dev\modem1

		Atari Mega-STE:
		biosdev=3,u:\dev\midi
		biosdev=6,u:\dev\modem1
		biosdev=7,u:\dev\modem2
		biosdev=8,u:\dev\serial2

		Atari TT:
		biosdev=3,u:\dev\midi
		biosdev=6,u:\dev\modem1
		biosdev=7,u:\dev\modem2
		biosdev=8,u:\dev\serial1
		biosdev=9,u:\dev\serial2

		Atari Falcon:
		biosdev=3,u:\dev\midi
		biosdev=6,u:\dev\modem1
		biosdev=7,u:\dev\lan

26.12.99
--------

- Die Beta-Versionen haben jetzt kein Verfalldatum mehr.
- Die Grîûe von U:\ wurde von 40 auf 64 EintrÑge vergrîûert. Trotzdem
  frage ich mich, wie man soviele EintrÑge verbrauchen kann. Vielleicht, wenn
  man alle Dateinamen klein schreibt?
- FÅr Dateisysteme, die Groû-/Kleinschreibung streng unterscheiden, habe ich
  in den zur Dokumentation gehîrenden *.H und *.C Dateien alle Verweise auf
  Dateinamen (#include) konsequent auf Kleinschrift gesetzt.

30.12.99
--------

- Bîsen Fehler aus MagicMac OS behoben, der dazu fÅhrte, daû das Mac-
  Dateisystem nicht angesprochen werden konnte.
- Pgetuid(),Psetuid(),Pgeteuid(),Pseteuid(),Psetreuid(),Psetregid(),
  Pgetauid(),Psetauid(),Pgetegid(),Pgetgid(),Psetgid() eingebaut.

  Das bedeutet aber nur, daû die Funktionen aufgerufen werden und
  irgendwelche Werte zurÅckliefern (werden auch bei Pexec() vererbt),
  es ergeben sich im Gegensatz zu MiNT keine EinschrÑnkungen fÅr
  Dateizugriffe, BIOS-Aufrufe, Uhrzeitfunktionen, Prozesse usw.,
  d.h. man kann "fremde" Prozesse nach wie vor abschieûen. Die
  User/GroupID- Funktionen existieren nur aus MiNT-KompatibilitÑt.

  Damit werden zur Zeit noch folgende MiNT-GEMDOS-Funktionen nicht
  unterstÅtzt (es gibt sicher aber inzwischen lÑngst mehr davon):

	Pnice()
	Prusage()
	Talarm()
	Pmsg()
	Fmidipipe()
	Prenice()
	Salert()
	Tmalarm()

  ZuzÅglich einer Unmenge von Fcntl()-Funktionen, speziell fÅr Terminals.

  Pnice() und Prenice() lieûe sich noch ziemlich leicht implementieren
  (bzw. simulieren, denn sie hÑtten keine Auswirkung). Die ganzen Terminal-
  Fcntls() sind eine Sysyphos-Arbeit, ebenso die noch nicht unterstÅtzte
  Spezial-Pipe (pseudo-TTY 0x04). Die Unix-Pipe (0x20) lieûe sich 
  noch einigermaûen leicht nachbauen, ist nur die Frage, wer sowas 
  braucht.

2.1.2000
--------

- Pnice() und Prenice() eingebaut. Die Werte werden nur gespeichert und
  auf das Intervall -20..20 begrenzt, haben aber keine Auswirkung auf die
  AusfÅhrungsprioritÑt. Das wÑre auch vîllig unsinnig, denn die PrioritÑt
  gilt ja nicht fÅr den Prozeû, sondern fÅr einen Thread, und man muû
  unbedingt die Threads innerhalb eines Prozesses unterschiedlich priorisieren
  kînnen.

9.1.2000
--------

- Nichtinitialisierte Variable behoben, die beim Lîschen der GerÑtedateien
  in u:\dev nach dem Bootvorgang beim Mac mitunter zum Absturz fÅhrte. Auf
  meinem G3 hatte ich keine Probleme, auf dem AWS stÅrzte die vorherige
  Version ab, aber nur, wenn ich das Titelbild eingeschaltet hatte.
- Der Mechanismus mit dem Festlegen der GerÑtenamen in u:\dev sollte jetzt
  auch auf dem Atari/PC funktionieren.

20.1.2000
---------

- Talarm() und Tmalarm() implementiert.

29.1.2000
---------

- Fehler im FAT32-Dateisystem beseitigt. Dfree() lieferte einen falschen
  Wert fÅr die Anzahl der freien Cluster, nachdem das Medium mindestens
  einmal gewechselt wurde.

20.2.2000
---------

- Der FSINFO-Sektor bei FAT32-Dateisystemen wird jetzt (hoffentlich) 
  korrekt behandelt. Das ôffnen eines seit dem letzten Bootvorgang 
  nicht verwendeten FAT32-Laufwerks sollte jetzt deutlich schneller 
  gehen.
  Die Daten im FSINFO-Sektor werden jedoch nur angefaût, wenn   
  tatsÑchlich SchreibvorgÑnge durchgefÅhrt werden. Wird ein Laufwerk 
  nur lesend verwendet, werden auch ungÅltige EintrÑge im FSINFO-
  Sektor nicht gÅltig gemacht, das erste ôffnen nach dem nÑchsten 
  Booten wird daher wieder langsam sein (da der freie Plattenplatz 
  durch Durchsuchen der gesamten FAT ermittelt wird).

2.10.2000  (release 6.20 an ASH)
---------

- wind_set(WF_ICONFIFY): Wird als Rechteck {-1,-1-1,-1} Åbergeben, sucht sich
  das AES selbst ein PlÑtzchen fÅr das ikonifizierte Fenster. Dabei kann jetzt
  auch der Platz genutzt werden, den das zu ikonifizierende Fenster belegt.
  Durch einen Fehler wurde bisher das zu ikonifizierende Fenster bei der
  Wahl des freien Platzes bereits als ikonifiziert angenommen, und daher
  konnte das ikonifizierte Fenster dort nicht liegen.

11.9.2001
---------

- Fehler beim Auslesen der Mega-ST-Uhr beseitigt. Keine neue Versionsnummer,
  nur BIOS-Datum 10.9.2001
